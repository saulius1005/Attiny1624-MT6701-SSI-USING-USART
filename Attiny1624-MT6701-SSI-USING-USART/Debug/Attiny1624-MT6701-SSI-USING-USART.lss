
Attiny1624-MT6701-SSI-USING-USART.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00803800  00803800  00001100  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000102c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000040  0000902c  0000102c  000010c0  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .bss          00000008  00803800  00803800  00001100  2**0
                  ALLOC
  4 .comment      0000005c  00000000  00000000  00001100  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000115c  2**2
                  CONTENTS, READONLY
  6 .debug_aranges 000000f8  00000000  00000000  000011a0  2**3
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00002b40  00000000  00000000  00001298  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00002016  00000000  00000000  00003dd8  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   0000096a  00000000  00000000  00005dee  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000138  00000000  00000000  00006758  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00001345  00000000  00000000  00006890  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00000140  00000000  00000000  00007bd5  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000090  00000000  00000000  00007d15  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 bd 00 	jmp	0x17a	; 0x17a <__ctors_end>
       4:	0c 94 cf 00 	jmp	0x19e	; 0x19e <__bad_interrupt>
       8:	0c 94 cf 00 	jmp	0x19e	; 0x19e <__bad_interrupt>
       c:	0c 94 cf 00 	jmp	0x19e	; 0x19e <__bad_interrupt>
      10:	0c 94 cf 00 	jmp	0x19e	; 0x19e <__bad_interrupt>
      14:	0c 94 cf 00 	jmp	0x19e	; 0x19e <__bad_interrupt>
      18:	0c 94 cf 00 	jmp	0x19e	; 0x19e <__bad_interrupt>
      1c:	0c 94 cf 00 	jmp	0x19e	; 0x19e <__bad_interrupt>
      20:	0c 94 cf 00 	jmp	0x19e	; 0x19e <__bad_interrupt>
      24:	0c 94 cf 00 	jmp	0x19e	; 0x19e <__bad_interrupt>
      28:	0c 94 cf 00 	jmp	0x19e	; 0x19e <__bad_interrupt>
      2c:	0c 94 cf 00 	jmp	0x19e	; 0x19e <__bad_interrupt>
      30:	0c 94 cf 00 	jmp	0x19e	; 0x19e <__bad_interrupt>
      34:	0c 94 cf 00 	jmp	0x19e	; 0x19e <__bad_interrupt>
      38:	0c 94 cf 00 	jmp	0x19e	; 0x19e <__bad_interrupt>
      3c:	0c 94 cf 00 	jmp	0x19e	; 0x19e <__bad_interrupt>
      40:	0c 94 cf 00 	jmp	0x19e	; 0x19e <__bad_interrupt>
      44:	0c 94 cf 00 	jmp	0x19e	; 0x19e <__bad_interrupt>
      48:	0c 94 cf 00 	jmp	0x19e	; 0x19e <__bad_interrupt>
      4c:	0c 94 cf 00 	jmp	0x19e	; 0x19e <__bad_interrupt>
      50:	0c 94 cf 00 	jmp	0x19e	; 0x19e <__bad_interrupt>
      54:	0c 94 cf 00 	jmp	0x19e	; 0x19e <__bad_interrupt>
      58:	0c 94 cf 00 	jmp	0x19e	; 0x19e <__bad_interrupt>
      5c:	0c 94 cf 00 	jmp	0x19e	; 0x19e <__bad_interrupt>
      60:	0c 94 cf 00 	jmp	0x19e	; 0x19e <__bad_interrupt>
      64:	0c 94 cf 00 	jmp	0x19e	; 0x19e <__bad_interrupt>
      68:	0c 94 cf 00 	jmp	0x19e	; 0x19e <__bad_interrupt>
      6c:	0c 94 cf 00 	jmp	0x19e	; 0x19e <__bad_interrupt>
      70:	0c 94 cf 00 	jmp	0x19e	; 0x19e <__bad_interrupt>
      74:	0c 94 cf 00 	jmp	0x19e	; 0x19e <__bad_interrupt>

00000078 <__trampolines_end>:
      78:	6e 61       	ori	r22, 0x1E	; 30
      7a:	6e 00       	.word	0x006e	; ????

0000007c <__c.2332>:
      7c:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      8c:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      9c:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      ac:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      bc:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
      cc:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
      dc:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
      ec:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
      fc:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     10c:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     11c:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     12c:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     13c:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     14c:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     15c:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     16c:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

0000017a <__ctors_end>:
     17a:	11 24       	eor	r1, r1
     17c:	1f be       	out	0x3f, r1	; 63
     17e:	cf ef       	ldi	r28, 0xFF	; 255
     180:	cd bf       	out	0x3d, r28	; 61
     182:	df e3       	ldi	r29, 0x3F	; 63
     184:	de bf       	out	0x3e, r29	; 62

00000186 <__do_clear_bss>:
     186:	28 e3       	ldi	r18, 0x38	; 56
     188:	a0 e0       	ldi	r26, 0x00	; 0
     18a:	b8 e3       	ldi	r27, 0x38	; 56
     18c:	01 c0       	rjmp	.+2      	; 0x190 <.do_clear_bss_start>

0000018e <.do_clear_bss_loop>:
     18e:	1d 92       	st	X+, r1

00000190 <.do_clear_bss_start>:
     190:	a8 30       	cpi	r26, 0x08	; 8
     192:	b2 07       	cpc	r27, r18
     194:	e1 f7       	brne	.-8      	; 0x18e <.do_clear_bss_loop>
     196:	0e 94 45 01 	call	0x28a	; 0x28a <main>
     19a:	0c 94 14 08 	jmp	0x1028	; 0x1028 <_exit>

0000019e <__bad_interrupt>:
     19e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001a2 <CLOCK_INHF_clock_init>:
 * - Disables the clock prescaler to achieve full-speed operation.
 * - Waits for the oscillator configuration to stabilize before exiting.
 */
void CLOCK_INHF_clock_init() {
    /* Enable the internal oscillator with a frequency of 20 MHz. */
    ccp_write_io((uint8_t *) &CLKCTRL.MCLKCTRLA, CLKCTRL_CLKSEL_OSC20M_gc /*| CLKCTRL_CLKOUT_bm*/); 
     1a2:	60 e0       	ldi	r22, 0x00	; 0
     1a4:	80 e6       	ldi	r24, 0x60	; 96
     1a6:	90 e0       	ldi	r25, 0x00	; 0
     1a8:	0e 94 0e 08 	call	0x101c	; 0x101c <ccp_write_io>
    // For SO14, it is impossible to enable CLKOUT due to the lack of a dedicated pin.

    /* Disable the main clock prescaler for full-speed operation. */
    ccp_write_io((uint8_t *) &CLKCTRL.MCLKCTRLB, CLKCTRL_PDIV_2X_gc & ~CLKCTRL_PEN_bm);
     1ac:	60 e0       	ldi	r22, 0x00	; 0
     1ae:	81 e6       	ldi	r24, 0x61	; 97
     1b0:	90 e0       	ldi	r25, 0x00	; 0
     1b2:	0e 94 0e 08 	call	0x101c	; 0x101c <ccp_write_io>

    /* Wait for the oscillator change to complete. */
    while (CLKCTRL.MCLKSTATUS & CLKCTRL_SOSC_bm) {};
     1b6:	80 91 63 00 	lds	r24, 0x0063	; 0x800063 <crc6_table+0x7f7037>
     1ba:	80 fd       	sbrc	r24, 0
     1bc:	fc cf       	rjmp	.-8      	; 0x1b6 <CLOCK_INHF_clock_init+0x14>
     1be:	08 95       	ret

000001c0 <crc6_mt6701_lookup>:
	0x13, 0x10, 0x15, 0x16, 0x1F, 0x1C, 0x19, 0x1A,
	0x0B, 0x08, 0x0D, 0x0E, 0x07, 0x04, 0x01, 0x02,
};

// Optimizuotas CRC-6 skaièiavimas naudojant lookup lentelæ
uint8_t crc6_mt6701_lookup(uint32_t data) {
     1c0:	0f 93       	push	r16
     1c2:	1f 93       	push	r17
	return crc6_table[crc6_table[crc6_table[0 ^ ((data >> 12) & 0x3F)] ^ ((data >> 6) & 0x3F)] ^ (data & 0x3F)];
     1c4:	8b 01       	movw	r16, r22
     1c6:	9c 01       	movw	r18, r24
     1c8:	0f 2e       	mov	r0, r31
     1ca:	fc e0       	ldi	r31, 0x0C	; 12
     1cc:	36 95       	lsr	r19
     1ce:	27 95       	ror	r18
     1d0:	17 95       	ror	r17
     1d2:	07 95       	ror	r16
     1d4:	fa 95       	dec	r31
     1d6:	d1 f7       	brne	.-12     	; 0x1cc <crc6_mt6701_lookup+0xc>
     1d8:	f0 2d       	mov	r31, r0
     1da:	0f 73       	andi	r16, 0x3F	; 63
     1dc:	11 27       	eor	r17, r17
     1de:	22 27       	eor	r18, r18
     1e0:	33 27       	eor	r19, r19
     1e2:	f8 01       	movw	r30, r16
     1e4:	e4 5d       	subi	r30, 0xD4	; 212
     1e6:	ff 46       	sbci	r31, 0x6F	; 111
     1e8:	40 81       	ld	r20, Z
     1ea:	8b 01       	movw	r16, r22
     1ec:	9c 01       	movw	r18, r24
     1ee:	68 94       	set
     1f0:	15 f8       	bld	r1, 5
     1f2:	36 95       	lsr	r19
     1f4:	27 95       	ror	r18
     1f6:	17 95       	ror	r17
     1f8:	07 95       	ror	r16
     1fa:	16 94       	lsr	r1
     1fc:	d1 f7       	brne	.-12     	; 0x1f2 <crc6_mt6701_lookup+0x32>
     1fe:	0f 73       	andi	r16, 0x3F	; 63
     200:	11 27       	eor	r17, r17
     202:	22 27       	eor	r18, r18
     204:	33 27       	eor	r19, r19
     206:	04 27       	eor	r16, r20
     208:	f8 01       	movw	r30, r16
     20a:	e4 5d       	subi	r30, 0xD4	; 212
     20c:	ff 46       	sbci	r31, 0x6F	; 111
     20e:	20 81       	ld	r18, Z
     210:	dc 01       	movw	r26, r24
     212:	cb 01       	movw	r24, r22
     214:	8f 73       	andi	r24, 0x3F	; 63
     216:	99 27       	eor	r25, r25
     218:	aa 27       	eor	r26, r26
     21a:	bb 27       	eor	r27, r27
     21c:	82 27       	eor	r24, r18
     21e:	fc 01       	movw	r30, r24
     220:	e4 5d       	subi	r30, 0xD4	; 212
     222:	ff 46       	sbci	r31, 0x6F	; 111
}
     224:	80 81       	ld	r24, Z
     226:	1f 91       	pop	r17
     228:	0f 91       	pop	r16
     22a:	08 95       	ret

0000022c <MT6701CRC>:

uint8_t MT6701CRC(uint32_t *data){ //function modifies init data values by removing crc (last 6 bites) and return 0 if crc is correct
     22c:	cf 93       	push	r28
     22e:	fc 01       	movw	r30, r24
    uint8_t received_crc = *data & 0x3F; //extracting only crc from data
     230:	80 81       	ld	r24, Z
     232:	91 81       	ldd	r25, Z+1	; 0x01
     234:	a2 81       	ldd	r26, Z+2	; 0x02
     236:	b3 81       	ldd	r27, Z+3	; 0x03
     238:	c8 2f       	mov	r28, r24
     23a:	cf 73       	andi	r28, 0x3F	; 63
    *data = *data >> 6;   // removing crc and leaving only real data (without CRC)
     23c:	bc 01       	movw	r22, r24
     23e:	cd 01       	movw	r24, r26
     240:	68 94       	set
     242:	15 f8       	bld	r1, 5
     244:	96 95       	lsr	r25
     246:	87 95       	ror	r24
     248:	77 95       	ror	r23
     24a:	67 95       	ror	r22
     24c:	16 94       	lsr	r1
     24e:	d1 f7       	brne	.-12     	; 0x244 <MT6701CRC+0x18>
     250:	60 83       	st	Z, r22
     252:	71 83       	std	Z+1, r23	; 0x01
     254:	82 83       	std	Z+2, r24	; 0x02
     256:	93 83       	std	Z+3, r25	; 0x03
    uint8_t calculated_crc = crc6_mt6701_lookup(*data);
     258:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <crc6_mt6701_lookup>
	return received_crc == calculated_crc ? 0 : 1; //return 0 if crc is correct and 1 if not
     25c:	91 e0       	ldi	r25, 0x01	; 1
     25e:	c8 13       	cpse	r28, r24
     260:	01 c0       	rjmp	.+2      	; 0x264 <MT6701CRC+0x38>
     262:	90 e0       	ldi	r25, 0x00	; 0
}
     264:	89 2f       	mov	r24, r25
     266:	cf 91       	pop	r28
     268:	08 95       	ret

0000026a <GPIO_init>:
 */

#include "Settings.h"

void GPIO_init(){
    PORTMUX.USARTROUTEA = PORTMUX_USART0_DEFAULT_gc; // Set USART0 to default pins
     26a:	10 92 e2 05 	sts	0x05E2, r1	; 0x8005e2 <crc6_table+0x7f75b6>

    PORTB.DIRSET = PIN1_bm | PIN2_bm; // Set PB1 as XCK (MT6701 CLK) out and PB2 as TX for dummy data sending
     26e:	e0 e2       	ldi	r30, 0x20	; 32
     270:	f4 e0       	ldi	r31, 0x04	; 4
     272:	86 e0       	ldi	r24, 0x06	; 6
     274:	81 83       	std	Z+1, r24	; 0x01
	PORTB.PIN2CTRL = PORT_PULLUPEN_bm; // Enable pull-up for PB2 (USART0 TX)
     276:	88 e0       	ldi	r24, 0x08	; 8
     278:	82 8b       	std	Z+18, r24	; 0x12
	//PORTB.PIN1CTRL = PORT_INVEN_bm; //For mt6701 need to use not inverted pin with enabled UCPHA (view USART.c). Uncomment if need to invert
    PORTB.DIRCLR = PIN3_bm; // Set PA3 as input (USART0 RX as MISO (MT6701 DO))
     27a:	82 83       	std	Z+2, r24	; 0x02
    PORTB.PIN3CTRL = PORT_PULLUPEN_bm; // Enable pull-up for PB3 (USART0 RX)
     27c:	83 8b       	std	Z+19, r24	; 0x13

	PORTA.DIRSET = PIN7_bm; // Set PA7 set as SS (MT6701 CSN)
     27e:	e0 e0       	ldi	r30, 0x00	; 0
     280:	f4 e0       	ldi	r31, 0x04	; 4
     282:	80 e8       	ldi	r24, 0x80	; 128
     284:	81 83       	std	Z+1, r24	; 0x01
	PORTA.OUTSET = PIN7_bm; // and keep it high
     286:	85 83       	std	Z+5, r24	; 0x05
     288:	08 95       	ret

0000028a <main>:

#include "Settings.h"

int main(void)
{
    CLOCK_INHF_clock_init();
     28a:	0e 94 d1 00 	call	0x1a2	; 0x1a2 <CLOCK_INHF_clock_init>
    GPIO_init();
     28e:	0e 94 35 01 	call	0x26a	; 0x26a <GPIO_init>
    USART0_init();
     292:	0e 94 bc 01 	call	0x378	; 0x378 <USART0_init>
    while (1) 
    {
		MT6701_SSI_Angle(); //Reading sensor every ~100mS
     296:	0e 94 57 01 	call	0x2ae	; 0x2ae <MT6701_SSI_Angle>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     29a:	2f e7       	ldi	r18, 0x7F	; 127
     29c:	8a e1       	ldi	r24, 0x1A	; 26
     29e:	96 e0       	ldi	r25, 0x06	; 6
     2a0:	21 50       	subi	r18, 0x01	; 1
     2a2:	80 40       	sbci	r24, 0x00	; 0
     2a4:	90 40       	sbci	r25, 0x00	; 0
     2a6:	e1 f7       	brne	.-8      	; 0x2a0 <main+0x16>
     2a8:	00 c0       	rjmp	.+0      	; 0x2aa <main+0x20>
     2aa:	00 00       	nop
     2ac:	f4 cf       	rjmp	.-24     	; 0x296 <main+0xc>

000002ae <MT6701_SSI_Angle>:
 *  Author: Saulius
 */ 
 #include "Settings.h"
 #include "MT6701Var.h"

 void MT6701_SSI_Angle(){
     2ae:	0f 93       	push	r16
     2b0:	1f 93       	push	r17
     2b2:	cf 93       	push	r28
     2b4:	df 93       	push	r29
     2b6:	00 d0       	rcall	.+0      	; 0x2b8 <MT6701_SSI_Angle+0xa>
     2b8:	00 d0       	rcall	.+0      	; 0x2ba <MT6701_SSI_Angle+0xc>
     2ba:	cd b7       	in	r28, 0x3d	; 61
     2bc:	de b7       	in	r29, 0x3e	; 62
	uint32_t received_data = 0;
     2be:	19 82       	std	Y+1, r1	; 0x01
     2c0:	1a 82       	std	Y+2, r1	; 0x02
     2c2:	1b 82       	std	Y+3, r1	; 0x03
     2c4:	1c 82       	std	Y+4, r1	; 0x04
 	USART0.STATUS = USART_TXCIF_bm; //clearing frame flag before data collecting
     2c6:	80 e4       	ldi	r24, 0x40	; 64
     2c8:	80 93 04 08 	sts	0x0804, r24	; 0x800804 <crc6_table+0x7f77d8>
 	PORTA.OUTCLR = PIN7_bm; //pull CSN Low
     2cc:	80 e8       	ldi	r24, 0x80	; 128
     2ce:	80 93 06 04 	sts	0x0406, r24	; 0x800406 <crc6_table+0x7f73da>
 	while(!(USART0.STATUS & USART_TXCIF_bm)){
     2d2:	17 c0       	rjmp	.+46     	; 0x302 <MT6701_SSI_Angle+0x54>
	 	for (uint8_t i = 0; i<3; i++){ // 3x8 = 24bits of data
		 	USART0_sendChar('o');// sending dummy data  (8bits) for XCK (CLK) generation
     2d4:	8f e6       	ldi	r24, 0x6F	; 111
     2d6:	0e 94 c7 01 	call	0x38e	; 0x38e <USART0_sendChar>
		 	uint8_t received_byte = USART0_readChar();  // reading 8 bits of data (DO)
     2da:	0e 94 ce 01 	call	0x39c	; 0x39c <USART0_readChar>
		 	received_data <<= 8;  // shift previous data to left
     2de:	49 81       	ldd	r20, Y+1	; 0x01
     2e0:	5a 81       	ldd	r21, Y+2	; 0x02
     2e2:	6b 81       	ldd	r22, Y+3	; 0x03
     2e4:	7c 81       	ldd	r23, Y+4	; 0x04
     2e6:	76 2f       	mov	r23, r22
     2e8:	65 2f       	mov	r22, r21
     2ea:	54 2f       	mov	r21, r20
     2ec:	44 27       	eor	r20, r20
		 	received_data |= received_byte;  // and add current data
     2ee:	48 2b       	or	r20, r24
     2f0:	49 83       	std	Y+1, r20	; 0x01
     2f2:	5a 83       	std	Y+2, r21	; 0x02
     2f4:	6b 83       	std	Y+3, r22	; 0x03
     2f6:	7c 83       	std	Y+4, r23	; 0x04
 void MT6701_SSI_Angle(){
	uint32_t received_data = 0;
 	USART0.STATUS = USART_TXCIF_bm; //clearing frame flag before data collecting
 	PORTA.OUTCLR = PIN7_bm; //pull CSN Low
 	while(!(USART0.STATUS & USART_TXCIF_bm)){
	 	for (uint8_t i = 0; i<3; i++){ // 3x8 = 24bits of data
     2f8:	1f 5f       	subi	r17, 0xFF	; 255
     2fa:	01 c0       	rjmp	.+2      	; 0x2fe <MT6701_SSI_Angle+0x50>
     2fc:	10 e0       	ldi	r17, 0x00	; 0
     2fe:	13 30       	cpi	r17, 0x03	; 3
     300:	48 f3       	brcs	.-46     	; 0x2d4 <MT6701_SSI_Angle+0x26>

 void MT6701_SSI_Angle(){
	uint32_t received_data = 0;
 	USART0.STATUS = USART_TXCIF_bm; //clearing frame flag before data collecting
 	PORTA.OUTCLR = PIN7_bm; //pull CSN Low
 	while(!(USART0.STATUS & USART_TXCIF_bm)){
     302:	80 91 04 08 	lds	r24, 0x0804	; 0x800804 <crc6_table+0x7f77d8>
     306:	86 ff       	sbrs	r24, 6
     308:	f9 cf       	rjmp	.-14     	; 0x2fc <MT6701_SSI_Angle+0x4e>
		 	uint8_t received_byte = USART0_readChar();  // reading 8 bits of data (DO)
		 	received_data <<= 8;  // shift previous data to left
		 	received_data |= received_byte;  // and add current data
	 	}
 	}// repeating until all frame will be send
 	PORTA.OUTSET = PIN7_bm; //pull CSN on high (USART SPI MODE don't have integrated SS (CSN) control
     30a:	80 e8       	ldi	r24, 0x80	; 128
     30c:	80 93 05 04 	sts	0x0405, r24	; 0x800405 <crc6_table+0x7f73d9>

	MT6701.CRCError = MT6701CRC(&received_data); // check and remove crc from received data
     310:	ce 01       	movw	r24, r28
     312:	01 96       	adiw	r24, 0x01	; 1
     314:	0e 94 16 01 	call	0x22c	; 0x22c <MT6701CRC>
     318:	00 e0       	ldi	r16, 0x00	; 0
     31a:	18 e3       	ldi	r17, 0x38	; 56
     31c:	f8 01       	movw	r30, r16
     31e:	87 83       	std	Z+7, r24	; 0x07
	MT6701.MagneticFieldStatus = (received_data & 0xf) & 0x3; //extracting magnetic field status
     320:	89 81       	ldd	r24, Y+1	; 0x01
     322:	9a 81       	ldd	r25, Y+2	; 0x02
     324:	ab 81       	ldd	r26, Y+3	; 0x03
     326:	bc 81       	ldd	r27, Y+4	; 0x04
     328:	28 2f       	mov	r18, r24
     32a:	23 70       	andi	r18, 0x03	; 3
     32c:	24 83       	std	Z+4, r18	; 0x04
	MT6701.PushButtonStatus = (received_data & 0xf) & 0x4; //extracting push button status
     32e:	28 2f       	mov	r18, r24
     330:	24 70       	andi	r18, 0x04	; 4
     332:	25 83       	std	Z+5, r18	; 0x05
	MT6701.TrackStatus = (received_data & 0xf) & 0x8; // extrackting track status
     334:	28 2f       	mov	r18, r24
     336:	28 70       	andi	r18, 0x08	; 8
     338:	26 83       	std	Z+6, r18	; 0x06
	MT6701.Angle = (double)(received_data >> 4)/45.51111111; //45.511... same as (received_data>>4) / 16384 * 360
     33a:	bc 01       	movw	r22, r24
     33c:	cd 01       	movw	r24, r26
     33e:	68 94       	set
     340:	13 f8       	bld	r1, 3
     342:	96 95       	lsr	r25
     344:	87 95       	ror	r24
     346:	77 95       	ror	r23
     348:	67 95       	ror	r22
     34a:	16 94       	lsr	r1
     34c:	d1 f7       	brne	.-12     	; 0x342 <MT6701_SSI_Angle+0x94>
     34e:	0e 94 4a 02 	call	0x494	; 0x494 <__floatunsisf>
     352:	21 e6       	ldi	r18, 0x61	; 97
     354:	3b e0       	ldi	r19, 0x0B	; 11
     356:	46 e3       	ldi	r20, 0x36	; 54
     358:	52 e4       	ldi	r21, 0x42	; 66
     35a:	0e 94 d8 01 	call	0x3b0	; 0x3b0 <__divsf3>
     35e:	f8 01       	movw	r30, r16
     360:	60 83       	st	Z, r22
     362:	71 83       	std	Z+1, r23	; 0x01
     364:	82 83       	std	Z+2, r24	; 0x02
     366:	93 83       	std	Z+3, r25	; 0x03

     368:	24 96       	adiw	r28, 0x04	; 4
     36a:	cd bf       	out	0x3d, r28	; 61
     36c:	de bf       	out	0x3e, r29	; 62
     36e:	df 91       	pop	r29
     370:	cf 91       	pop	r28
     372:	1f 91       	pop	r17
     374:	0f 91       	pop	r16
     376:	08 95       	ret

00000378 <USART0_init>:

#include "Settings.h"


void USART0_init() {
	USART0.BAUD = (uint16_t)USART0_BAUD_RATE(500000); // Set baud rate to 0.5 Mbps
     378:	e0 e0       	ldi	r30, 0x00	; 0
     37a:	f8 e0       	ldi	r31, 0x08	; 8
     37c:	80 e0       	ldi	r24, 0x00	; 0
     37e:	95 e0       	ldi	r25, 0x05	; 5
     380:	80 87       	std	Z+8, r24	; 0x08
     382:	91 87       	std	Z+9, r25	; 0x09
	USART0.CTRLB = USART_RXEN_bm | USART_TXEN_bm; // Enable RX as MISO, TX for dummy data sending
     384:	80 ec       	ldi	r24, 0xC0	; 192
     386:	86 83       	std	Z+6, r24	; 0x06
	USART0.CTRLC = USART_CMODE_MSPI_gc | USART_UCPHA_bm; // Configure as Host SPI and Data are sampled on the trailing (last) edge
     388:	82 ec       	ldi	r24, 0xC2	; 194
     38a:	87 83       	std	Z+7, r24	; 0x07
     38c:	08 95       	ret

0000038e <USART0_sendChar>:
}

void USART0_sendChar(char c) {
	while (!(USART0.STATUS & USART_DREIF_bm)); // Wait for data register to be empty
     38e:	90 91 04 08 	lds	r25, 0x0804	; 0x800804 <crc6_table+0x7f77d8>
     392:	95 ff       	sbrs	r25, 5
     394:	fc cf       	rjmp	.-8      	; 0x38e <USART0_sendChar>
	USART0.TXDATAL = c; // Send character
     396:	80 93 02 08 	sts	0x0802, r24	; 0x800802 <crc6_table+0x7f77d6>
     39a:	08 95       	ret

0000039c <USART0_readChar>:
}

char USART0_readChar() {
	USART0.STATUS = USART_RXCIF_bm; // Clear buffer before reading
     39c:	80 e8       	ldi	r24, 0x80	; 128
     39e:	80 93 04 08 	sts	0x0804, r24	; 0x800804 <crc6_table+0x7f77d8>
	while (!(USART0.STATUS & USART_RXCIF_bm)); // Wait for data to be received
     3a2:	80 91 04 08 	lds	r24, 0x0804	; 0x800804 <crc6_table+0x7f77d8>
     3a6:	88 23       	and	r24, r24
     3a8:	e4 f7       	brge	.-8      	; 0x3a2 <USART0_readChar+0x6>
	return USART0.RXDATAL; // Return received character
     3aa:	80 91 00 08 	lds	r24, 0x0800	; 0x800800 <crc6_table+0x7f77d4>
     3ae:	08 95       	ret

000003b0 <__divsf3>:
     3b0:	0e 94 ec 01 	call	0x3d8	; 0x3d8 <__divsf3x>
     3b4:	0c 94 9e 02 	jmp	0x53c	; 0x53c <__fp_round>
     3b8:	0e 94 97 02 	call	0x52e	; 0x52e <__fp_pscB>
     3bc:	58 f0       	brcs	.+22     	; 0x3d4 <__divsf3+0x24>
     3be:	0e 94 90 02 	call	0x520	; 0x520 <__fp_pscA>
     3c2:	40 f0       	brcs	.+16     	; 0x3d4 <__divsf3+0x24>
     3c4:	29 f4       	brne	.+10     	; 0x3d0 <__divsf3+0x20>
     3c6:	5f 3f       	cpi	r21, 0xFF	; 255
     3c8:	29 f0       	breq	.+10     	; 0x3d4 <__divsf3+0x24>
     3ca:	0c 94 87 02 	jmp	0x50e	; 0x50e <__fp_inf>
     3ce:	51 11       	cpse	r21, r1
     3d0:	0c 94 d2 02 	jmp	0x5a4	; 0x5a4 <__fp_szero>
     3d4:	0c 94 8d 02 	jmp	0x51a	; 0x51a <__fp_nan>

000003d8 <__divsf3x>:
     3d8:	0e 94 af 02 	call	0x55e	; 0x55e <__fp_split3>
     3dc:	68 f3       	brcs	.-38     	; 0x3b8 <__divsf3+0x8>

000003de <__divsf3_pse>:
     3de:	99 23       	and	r25, r25
     3e0:	b1 f3       	breq	.-20     	; 0x3ce <__divsf3+0x1e>
     3e2:	55 23       	and	r21, r21
     3e4:	91 f3       	breq	.-28     	; 0x3ca <__divsf3+0x1a>
     3e6:	95 1b       	sub	r25, r21
     3e8:	55 0b       	sbc	r21, r21
     3ea:	bb 27       	eor	r27, r27
     3ec:	aa 27       	eor	r26, r26
     3ee:	62 17       	cp	r22, r18
     3f0:	73 07       	cpc	r23, r19
     3f2:	84 07       	cpc	r24, r20
     3f4:	38 f0       	brcs	.+14     	; 0x404 <__LOCK_REGION_LENGTH__+0x4>
     3f6:	9f 5f       	subi	r25, 0xFF	; 255
     3f8:	5f 4f       	sbci	r21, 0xFF	; 255
     3fa:	22 0f       	add	r18, r18
     3fc:	33 1f       	adc	r19, r19
     3fe:	44 1f       	adc	r20, r20
     400:	aa 1f       	adc	r26, r26
     402:	a9 f3       	breq	.-22     	; 0x3ee <__divsf3_pse+0x10>
     404:	35 d0       	rcall	.+106    	; 0x470 <__LOCK_REGION_LENGTH__+0x70>
     406:	0e 2e       	mov	r0, r30
     408:	3a f0       	brmi	.+14     	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
     40a:	e0 e8       	ldi	r30, 0x80	; 128
     40c:	32 d0       	rcall	.+100    	; 0x472 <__LOCK_REGION_LENGTH__+0x72>
     40e:	91 50       	subi	r25, 0x01	; 1
     410:	50 40       	sbci	r21, 0x00	; 0
     412:	e6 95       	lsr	r30
     414:	00 1c       	adc	r0, r0
     416:	ca f7       	brpl	.-14     	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
     418:	2b d0       	rcall	.+86     	; 0x470 <__LOCK_REGION_LENGTH__+0x70>
     41a:	fe 2f       	mov	r31, r30
     41c:	29 d0       	rcall	.+82     	; 0x470 <__LOCK_REGION_LENGTH__+0x70>
     41e:	66 0f       	add	r22, r22
     420:	77 1f       	adc	r23, r23
     422:	88 1f       	adc	r24, r24
     424:	bb 1f       	adc	r27, r27
     426:	26 17       	cp	r18, r22
     428:	37 07       	cpc	r19, r23
     42a:	48 07       	cpc	r20, r24
     42c:	ab 07       	cpc	r26, r27
     42e:	b0 e8       	ldi	r27, 0x80	; 128
     430:	09 f0       	breq	.+2      	; 0x434 <__LOCK_REGION_LENGTH__+0x34>
     432:	bb 0b       	sbc	r27, r27
     434:	80 2d       	mov	r24, r0
     436:	bf 01       	movw	r22, r30
     438:	ff 27       	eor	r31, r31
     43a:	93 58       	subi	r25, 0x83	; 131
     43c:	5f 4f       	sbci	r21, 0xFF	; 255
     43e:	3a f0       	brmi	.+14     	; 0x44e <__LOCK_REGION_LENGTH__+0x4e>
     440:	9e 3f       	cpi	r25, 0xFE	; 254
     442:	51 05       	cpc	r21, r1
     444:	78 f0       	brcs	.+30     	; 0x464 <__LOCK_REGION_LENGTH__+0x64>
     446:	0c 94 87 02 	jmp	0x50e	; 0x50e <__fp_inf>
     44a:	0c 94 d2 02 	jmp	0x5a4	; 0x5a4 <__fp_szero>
     44e:	5f 3f       	cpi	r21, 0xFF	; 255
     450:	e4 f3       	brlt	.-8      	; 0x44a <__LOCK_REGION_LENGTH__+0x4a>
     452:	98 3e       	cpi	r25, 0xE8	; 232
     454:	d4 f3       	brlt	.-12     	; 0x44a <__LOCK_REGION_LENGTH__+0x4a>
     456:	86 95       	lsr	r24
     458:	77 95       	ror	r23
     45a:	67 95       	ror	r22
     45c:	b7 95       	ror	r27
     45e:	f7 95       	ror	r31
     460:	9f 5f       	subi	r25, 0xFF	; 255
     462:	c9 f7       	brne	.-14     	; 0x456 <__LOCK_REGION_LENGTH__+0x56>
     464:	88 0f       	add	r24, r24
     466:	91 1d       	adc	r25, r1
     468:	96 95       	lsr	r25
     46a:	87 95       	ror	r24
     46c:	97 f9       	bld	r25, 7
     46e:	08 95       	ret
     470:	e1 e0       	ldi	r30, 0x01	; 1
     472:	66 0f       	add	r22, r22
     474:	77 1f       	adc	r23, r23
     476:	88 1f       	adc	r24, r24
     478:	bb 1f       	adc	r27, r27
     47a:	62 17       	cp	r22, r18
     47c:	73 07       	cpc	r23, r19
     47e:	84 07       	cpc	r24, r20
     480:	ba 07       	cpc	r27, r26
     482:	20 f0       	brcs	.+8      	; 0x48c <__LOCK_REGION_LENGTH__+0x8c>
     484:	62 1b       	sub	r22, r18
     486:	73 0b       	sbc	r23, r19
     488:	84 0b       	sbc	r24, r20
     48a:	ba 0b       	sbc	r27, r26
     48c:	ee 1f       	adc	r30, r30
     48e:	88 f7       	brcc	.-30     	; 0x472 <__LOCK_REGION_LENGTH__+0x72>
     490:	e0 95       	com	r30
     492:	08 95       	ret

00000494 <__floatunsisf>:
     494:	e8 94       	clt
     496:	09 c0       	rjmp	.+18     	; 0x4aa <__floatsisf+0x12>

00000498 <__floatsisf>:
     498:	97 fb       	bst	r25, 7
     49a:	3e f4       	brtc	.+14     	; 0x4aa <__floatsisf+0x12>
     49c:	90 95       	com	r25
     49e:	80 95       	com	r24
     4a0:	70 95       	com	r23
     4a2:	61 95       	neg	r22
     4a4:	7f 4f       	sbci	r23, 0xFF	; 255
     4a6:	8f 4f       	sbci	r24, 0xFF	; 255
     4a8:	9f 4f       	sbci	r25, 0xFF	; 255
     4aa:	99 23       	and	r25, r25
     4ac:	a9 f0       	breq	.+42     	; 0x4d8 <__floatsisf+0x40>
     4ae:	f9 2f       	mov	r31, r25
     4b0:	96 e9       	ldi	r25, 0x96	; 150
     4b2:	bb 27       	eor	r27, r27
     4b4:	93 95       	inc	r25
     4b6:	f6 95       	lsr	r31
     4b8:	87 95       	ror	r24
     4ba:	77 95       	ror	r23
     4bc:	67 95       	ror	r22
     4be:	b7 95       	ror	r27
     4c0:	f1 11       	cpse	r31, r1
     4c2:	f8 cf       	rjmp	.-16     	; 0x4b4 <__floatsisf+0x1c>
     4c4:	fa f4       	brpl	.+62     	; 0x504 <__floatsisf+0x6c>
     4c6:	bb 0f       	add	r27, r27
     4c8:	11 f4       	brne	.+4      	; 0x4ce <__floatsisf+0x36>
     4ca:	60 ff       	sbrs	r22, 0
     4cc:	1b c0       	rjmp	.+54     	; 0x504 <__floatsisf+0x6c>
     4ce:	6f 5f       	subi	r22, 0xFF	; 255
     4d0:	7f 4f       	sbci	r23, 0xFF	; 255
     4d2:	8f 4f       	sbci	r24, 0xFF	; 255
     4d4:	9f 4f       	sbci	r25, 0xFF	; 255
     4d6:	16 c0       	rjmp	.+44     	; 0x504 <__floatsisf+0x6c>
     4d8:	88 23       	and	r24, r24
     4da:	11 f0       	breq	.+4      	; 0x4e0 <__floatsisf+0x48>
     4dc:	96 e9       	ldi	r25, 0x96	; 150
     4de:	11 c0       	rjmp	.+34     	; 0x502 <__floatsisf+0x6a>
     4e0:	77 23       	and	r23, r23
     4e2:	21 f0       	breq	.+8      	; 0x4ec <__floatsisf+0x54>
     4e4:	9e e8       	ldi	r25, 0x8E	; 142
     4e6:	87 2f       	mov	r24, r23
     4e8:	76 2f       	mov	r23, r22
     4ea:	05 c0       	rjmp	.+10     	; 0x4f6 <__floatsisf+0x5e>
     4ec:	66 23       	and	r22, r22
     4ee:	71 f0       	breq	.+28     	; 0x50c <__floatsisf+0x74>
     4f0:	96 e8       	ldi	r25, 0x86	; 134
     4f2:	86 2f       	mov	r24, r22
     4f4:	70 e0       	ldi	r23, 0x00	; 0
     4f6:	60 e0       	ldi	r22, 0x00	; 0
     4f8:	2a f0       	brmi	.+10     	; 0x504 <__floatsisf+0x6c>
     4fa:	9a 95       	dec	r25
     4fc:	66 0f       	add	r22, r22
     4fe:	77 1f       	adc	r23, r23
     500:	88 1f       	adc	r24, r24
     502:	da f7       	brpl	.-10     	; 0x4fa <__floatsisf+0x62>
     504:	88 0f       	add	r24, r24
     506:	96 95       	lsr	r25
     508:	87 95       	ror	r24
     50a:	97 f9       	bld	r25, 7
     50c:	08 95       	ret

0000050e <__fp_inf>:
     50e:	97 f9       	bld	r25, 7
     510:	9f 67       	ori	r25, 0x7F	; 127
     512:	80 e8       	ldi	r24, 0x80	; 128
     514:	70 e0       	ldi	r23, 0x00	; 0
     516:	60 e0       	ldi	r22, 0x00	; 0
     518:	08 95       	ret

0000051a <__fp_nan>:
     51a:	9f ef       	ldi	r25, 0xFF	; 255
     51c:	80 ec       	ldi	r24, 0xC0	; 192
     51e:	08 95       	ret

00000520 <__fp_pscA>:
     520:	00 24       	eor	r0, r0
     522:	0a 94       	dec	r0
     524:	16 16       	cp	r1, r22
     526:	17 06       	cpc	r1, r23
     528:	18 06       	cpc	r1, r24
     52a:	09 06       	cpc	r0, r25
     52c:	08 95       	ret

0000052e <__fp_pscB>:
     52e:	00 24       	eor	r0, r0
     530:	0a 94       	dec	r0
     532:	12 16       	cp	r1, r18
     534:	13 06       	cpc	r1, r19
     536:	14 06       	cpc	r1, r20
     538:	05 06       	cpc	r0, r21
     53a:	08 95       	ret

0000053c <__fp_round>:
     53c:	09 2e       	mov	r0, r25
     53e:	03 94       	inc	r0
     540:	00 0c       	add	r0, r0
     542:	11 f4       	brne	.+4      	; 0x548 <__fp_round+0xc>
     544:	88 23       	and	r24, r24
     546:	52 f0       	brmi	.+20     	; 0x55c <__fp_round+0x20>
     548:	bb 0f       	add	r27, r27
     54a:	40 f4       	brcc	.+16     	; 0x55c <__fp_round+0x20>
     54c:	bf 2b       	or	r27, r31
     54e:	11 f4       	brne	.+4      	; 0x554 <__fp_round+0x18>
     550:	60 ff       	sbrs	r22, 0
     552:	04 c0       	rjmp	.+8      	; 0x55c <__fp_round+0x20>
     554:	6f 5f       	subi	r22, 0xFF	; 255
     556:	7f 4f       	sbci	r23, 0xFF	; 255
     558:	8f 4f       	sbci	r24, 0xFF	; 255
     55a:	9f 4f       	sbci	r25, 0xFF	; 255
     55c:	08 95       	ret

0000055e <__fp_split3>:
     55e:	57 fd       	sbrc	r21, 7
     560:	90 58       	subi	r25, 0x80	; 128
     562:	44 0f       	add	r20, r20
     564:	55 1f       	adc	r21, r21
     566:	59 f0       	breq	.+22     	; 0x57e <__fp_splitA+0x10>
     568:	5f 3f       	cpi	r21, 0xFF	; 255
     56a:	71 f0       	breq	.+28     	; 0x588 <__fp_splitA+0x1a>
     56c:	47 95       	ror	r20

0000056e <__fp_splitA>:
     56e:	88 0f       	add	r24, r24
     570:	97 fb       	bst	r25, 7
     572:	99 1f       	adc	r25, r25
     574:	61 f0       	breq	.+24     	; 0x58e <__fp_splitA+0x20>
     576:	9f 3f       	cpi	r25, 0xFF	; 255
     578:	79 f0       	breq	.+30     	; 0x598 <__fp_splitA+0x2a>
     57a:	87 95       	ror	r24
     57c:	08 95       	ret
     57e:	12 16       	cp	r1, r18
     580:	13 06       	cpc	r1, r19
     582:	14 06       	cpc	r1, r20
     584:	55 1f       	adc	r21, r21
     586:	f2 cf       	rjmp	.-28     	; 0x56c <__fp_split3+0xe>
     588:	46 95       	lsr	r20
     58a:	f1 df       	rcall	.-30     	; 0x56e <__fp_splitA>
     58c:	08 c0       	rjmp	.+16     	; 0x59e <__fp_splitA+0x30>
     58e:	16 16       	cp	r1, r22
     590:	17 06       	cpc	r1, r23
     592:	18 06       	cpc	r1, r24
     594:	99 1f       	adc	r25, r25
     596:	f1 cf       	rjmp	.-30     	; 0x57a <__fp_splitA+0xc>
     598:	86 95       	lsr	r24
     59a:	71 05       	cpc	r23, r1
     59c:	61 05       	cpc	r22, r1
     59e:	08 94       	sec
     5a0:	08 95       	ret

000005a2 <__fp_zero>:
     5a2:	e8 94       	clt

000005a4 <__fp_szero>:
     5a4:	bb 27       	eor	r27, r27
     5a6:	66 27       	eor	r22, r22
     5a8:	77 27       	eor	r23, r23
     5aa:	cb 01       	movw	r24, r22
     5ac:	97 f9       	bld	r25, 7
     5ae:	08 95       	ret

000005b0 <vfprintf>:
     5b0:	a0 e1       	ldi	r26, 0x10	; 16
     5b2:	b0 e0       	ldi	r27, 0x00	; 0
     5b4:	ee ed       	ldi	r30, 0xDE	; 222
     5b6:	f2 e0       	ldi	r31, 0x02	; 2
     5b8:	0c 94 55 06 	jmp	0xcaa	; 0xcaa <__prologue_saves__>
     5bc:	7c 01       	movw	r14, r24
     5be:	1b 01       	movw	r2, r22
     5c0:	6a 01       	movw	r12, r20
     5c2:	fc 01       	movw	r30, r24
     5c4:	16 82       	std	Z+6, r1	; 0x06
     5c6:	17 82       	std	Z+7, r1	; 0x07
     5c8:	83 81       	ldd	r24, Z+3	; 0x03
     5ca:	81 ff       	sbrs	r24, 1
     5cc:	44 c3       	rjmp	.+1672   	; 0xc56 <__DATA_REGION_LENGTH__+0x456>
     5ce:	9e 01       	movw	r18, r28
     5d0:	2f 5f       	subi	r18, 0xFF	; 255
     5d2:	3f 4f       	sbci	r19, 0xFF	; 255
     5d4:	39 01       	movw	r6, r18
     5d6:	f7 01       	movw	r30, r14
     5d8:	93 81       	ldd	r25, Z+3	; 0x03
     5da:	f1 01       	movw	r30, r2
     5dc:	93 fd       	sbrc	r25, 3
     5de:	85 91       	lpm	r24, Z+
     5e0:	93 ff       	sbrs	r25, 3
     5e2:	81 91       	ld	r24, Z+
     5e4:	1f 01       	movw	r2, r30
     5e6:	88 23       	and	r24, r24
     5e8:	09 f4       	brne	.+2      	; 0x5ec <vfprintf+0x3c>
     5ea:	31 c3       	rjmp	.+1634   	; 0xc4e <__DATA_REGION_LENGTH__+0x44e>
     5ec:	85 32       	cpi	r24, 0x25	; 37
     5ee:	39 f4       	brne	.+14     	; 0x5fe <vfprintf+0x4e>
     5f0:	93 fd       	sbrc	r25, 3
     5f2:	85 91       	lpm	r24, Z+
     5f4:	93 ff       	sbrs	r25, 3
     5f6:	81 91       	ld	r24, Z+
     5f8:	1f 01       	movw	r2, r30
     5fa:	85 32       	cpi	r24, 0x25	; 37
     5fc:	39 f4       	brne	.+14     	; 0x60c <vfprintf+0x5c>
     5fe:	b7 01       	movw	r22, r14
     600:	90 e0       	ldi	r25, 0x00	; 0
     602:	0e 94 74 07 	call	0xee8	; 0xee8 <fputc>
     606:	56 01       	movw	r10, r12
     608:	65 01       	movw	r12, r10
     60a:	e5 cf       	rjmp	.-54     	; 0x5d6 <vfprintf+0x26>
     60c:	10 e0       	ldi	r17, 0x00	; 0
     60e:	51 2c       	mov	r5, r1
     610:	91 2c       	mov	r9, r1
     612:	ff e1       	ldi	r31, 0x1F	; 31
     614:	f9 15       	cp	r31, r9
     616:	d8 f0       	brcs	.+54     	; 0x64e <vfprintf+0x9e>
     618:	8b 32       	cpi	r24, 0x2B	; 43
     61a:	79 f0       	breq	.+30     	; 0x63a <vfprintf+0x8a>
     61c:	38 f4       	brcc	.+14     	; 0x62c <vfprintf+0x7c>
     61e:	80 32       	cpi	r24, 0x20	; 32
     620:	79 f0       	breq	.+30     	; 0x640 <vfprintf+0x90>
     622:	83 32       	cpi	r24, 0x23	; 35
     624:	a1 f4       	brne	.+40     	; 0x64e <vfprintf+0x9e>
     626:	f9 2d       	mov	r31, r9
     628:	f0 61       	ori	r31, 0x10	; 16
     62a:	2e c0       	rjmp	.+92     	; 0x688 <vfprintf+0xd8>
     62c:	8d 32       	cpi	r24, 0x2D	; 45
     62e:	61 f0       	breq	.+24     	; 0x648 <vfprintf+0x98>
     630:	80 33       	cpi	r24, 0x30	; 48
     632:	69 f4       	brne	.+26     	; 0x64e <vfprintf+0x9e>
     634:	29 2d       	mov	r18, r9
     636:	21 60       	ori	r18, 0x01	; 1
     638:	2d c0       	rjmp	.+90     	; 0x694 <vfprintf+0xe4>
     63a:	39 2d       	mov	r19, r9
     63c:	32 60       	ori	r19, 0x02	; 2
     63e:	93 2e       	mov	r9, r19
     640:	89 2d       	mov	r24, r9
     642:	84 60       	ori	r24, 0x04	; 4
     644:	98 2e       	mov	r9, r24
     646:	2a c0       	rjmp	.+84     	; 0x69c <vfprintf+0xec>
     648:	e9 2d       	mov	r30, r9
     64a:	e8 60       	ori	r30, 0x08	; 8
     64c:	15 c0       	rjmp	.+42     	; 0x678 <vfprintf+0xc8>
     64e:	97 fc       	sbrc	r9, 7
     650:	2d c0       	rjmp	.+90     	; 0x6ac <vfprintf+0xfc>
     652:	20 ed       	ldi	r18, 0xD0	; 208
     654:	28 0f       	add	r18, r24
     656:	2a 30       	cpi	r18, 0x0A	; 10
     658:	88 f4       	brcc	.+34     	; 0x67c <vfprintf+0xcc>
     65a:	96 fe       	sbrs	r9, 6
     65c:	06 c0       	rjmp	.+12     	; 0x66a <vfprintf+0xba>
     65e:	3a e0       	ldi	r19, 0x0A	; 10
     660:	13 9f       	mul	r17, r19
     662:	20 0d       	add	r18, r0
     664:	11 24       	eor	r1, r1
     666:	12 2f       	mov	r17, r18
     668:	19 c0       	rjmp	.+50     	; 0x69c <vfprintf+0xec>
     66a:	8a e0       	ldi	r24, 0x0A	; 10
     66c:	58 9e       	mul	r5, r24
     66e:	20 0d       	add	r18, r0
     670:	11 24       	eor	r1, r1
     672:	52 2e       	mov	r5, r18
     674:	e9 2d       	mov	r30, r9
     676:	e0 62       	ori	r30, 0x20	; 32
     678:	9e 2e       	mov	r9, r30
     67a:	10 c0       	rjmp	.+32     	; 0x69c <vfprintf+0xec>
     67c:	8e 32       	cpi	r24, 0x2E	; 46
     67e:	31 f4       	brne	.+12     	; 0x68c <vfprintf+0xdc>
     680:	96 fc       	sbrc	r9, 6
     682:	e5 c2       	rjmp	.+1482   	; 0xc4e <__DATA_REGION_LENGTH__+0x44e>
     684:	f9 2d       	mov	r31, r9
     686:	f0 64       	ori	r31, 0x40	; 64
     688:	9f 2e       	mov	r9, r31
     68a:	08 c0       	rjmp	.+16     	; 0x69c <vfprintf+0xec>
     68c:	8c 36       	cpi	r24, 0x6C	; 108
     68e:	21 f4       	brne	.+8      	; 0x698 <vfprintf+0xe8>
     690:	29 2d       	mov	r18, r9
     692:	20 68       	ori	r18, 0x80	; 128
     694:	92 2e       	mov	r9, r18
     696:	02 c0       	rjmp	.+4      	; 0x69c <vfprintf+0xec>
     698:	88 36       	cpi	r24, 0x68	; 104
     69a:	41 f4       	brne	.+16     	; 0x6ac <vfprintf+0xfc>
     69c:	f1 01       	movw	r30, r2
     69e:	93 fd       	sbrc	r25, 3
     6a0:	85 91       	lpm	r24, Z+
     6a2:	93 ff       	sbrs	r25, 3
     6a4:	81 91       	ld	r24, Z+
     6a6:	1f 01       	movw	r2, r30
     6a8:	81 11       	cpse	r24, r1
     6aa:	b3 cf       	rjmp	.-154    	; 0x612 <vfprintf+0x62>
     6ac:	9b eb       	ldi	r25, 0xBB	; 187
     6ae:	98 0f       	add	r25, r24
     6b0:	93 30       	cpi	r25, 0x03	; 3
     6b2:	20 f4       	brcc	.+8      	; 0x6bc <vfprintf+0x10c>
     6b4:	99 2d       	mov	r25, r9
     6b6:	90 61       	ori	r25, 0x10	; 16
     6b8:	80 5e       	subi	r24, 0xE0	; 224
     6ba:	07 c0       	rjmp	.+14     	; 0x6ca <vfprintf+0x11a>
     6bc:	9b e9       	ldi	r25, 0x9B	; 155
     6be:	98 0f       	add	r25, r24
     6c0:	93 30       	cpi	r25, 0x03	; 3
     6c2:	08 f0       	brcs	.+2      	; 0x6c6 <vfprintf+0x116>
     6c4:	66 c1       	rjmp	.+716    	; 0x992 <__DATA_REGION_LENGTH__+0x192>
     6c6:	99 2d       	mov	r25, r9
     6c8:	9f 7e       	andi	r25, 0xEF	; 239
     6ca:	96 ff       	sbrs	r25, 6
     6cc:	16 e0       	ldi	r17, 0x06	; 6
     6ce:	9f 73       	andi	r25, 0x3F	; 63
     6d0:	99 2e       	mov	r9, r25
     6d2:	85 36       	cpi	r24, 0x65	; 101
     6d4:	19 f4       	brne	.+6      	; 0x6dc <vfprintf+0x12c>
     6d6:	90 64       	ori	r25, 0x40	; 64
     6d8:	99 2e       	mov	r9, r25
     6da:	08 c0       	rjmp	.+16     	; 0x6ec <vfprintf+0x13c>
     6dc:	86 36       	cpi	r24, 0x66	; 102
     6de:	21 f4       	brne	.+8      	; 0x6e8 <vfprintf+0x138>
     6e0:	39 2f       	mov	r19, r25
     6e2:	30 68       	ori	r19, 0x80	; 128
     6e4:	93 2e       	mov	r9, r19
     6e6:	02 c0       	rjmp	.+4      	; 0x6ec <vfprintf+0x13c>
     6e8:	11 11       	cpse	r17, r1
     6ea:	11 50       	subi	r17, 0x01	; 1
     6ec:	97 fe       	sbrs	r9, 7
     6ee:	07 c0       	rjmp	.+14     	; 0x6fe <vfprintf+0x14e>
     6f0:	1c 33       	cpi	r17, 0x3C	; 60
     6f2:	50 f4       	brcc	.+20     	; 0x708 <vfprintf+0x158>
     6f4:	44 24       	eor	r4, r4
     6f6:	43 94       	inc	r4
     6f8:	41 0e       	add	r4, r17
     6fa:	27 e0       	ldi	r18, 0x07	; 7
     6fc:	0b c0       	rjmp	.+22     	; 0x714 <vfprintf+0x164>
     6fe:	18 30       	cpi	r17, 0x08	; 8
     700:	38 f0       	brcs	.+14     	; 0x710 <vfprintf+0x160>
     702:	27 e0       	ldi	r18, 0x07	; 7
     704:	17 e0       	ldi	r17, 0x07	; 7
     706:	05 c0       	rjmp	.+10     	; 0x712 <vfprintf+0x162>
     708:	27 e0       	ldi	r18, 0x07	; 7
     70a:	9c e3       	ldi	r25, 0x3C	; 60
     70c:	49 2e       	mov	r4, r25
     70e:	02 c0       	rjmp	.+4      	; 0x714 <vfprintf+0x164>
     710:	21 2f       	mov	r18, r17
     712:	41 2c       	mov	r4, r1
     714:	56 01       	movw	r10, r12
     716:	84 e0       	ldi	r24, 0x04	; 4
     718:	a8 0e       	add	r10, r24
     71a:	b1 1c       	adc	r11, r1
     71c:	f6 01       	movw	r30, r12
     71e:	60 81       	ld	r22, Z
     720:	71 81       	ldd	r23, Z+1	; 0x01
     722:	82 81       	ldd	r24, Z+2	; 0x02
     724:	93 81       	ldd	r25, Z+3	; 0x03
     726:	04 2d       	mov	r16, r4
     728:	a3 01       	movw	r20, r6
     72a:	0e 94 86 06 	call	0xd0c	; 0xd0c <__ftoa_engine>
     72e:	6c 01       	movw	r12, r24
     730:	f9 81       	ldd	r31, Y+1	; 0x01
     732:	fc 87       	std	Y+12, r31	; 0x0c
     734:	f0 ff       	sbrs	r31, 0
     736:	02 c0       	rjmp	.+4      	; 0x73c <vfprintf+0x18c>
     738:	f3 ff       	sbrs	r31, 3
     73a:	06 c0       	rjmp	.+12     	; 0x748 <vfprintf+0x198>
     73c:	91 fc       	sbrc	r9, 1
     73e:	06 c0       	rjmp	.+12     	; 0x74c <vfprintf+0x19c>
     740:	92 fe       	sbrs	r9, 2
     742:	06 c0       	rjmp	.+12     	; 0x750 <vfprintf+0x1a0>
     744:	00 e2       	ldi	r16, 0x20	; 32
     746:	05 c0       	rjmp	.+10     	; 0x752 <vfprintf+0x1a2>
     748:	0d e2       	ldi	r16, 0x2D	; 45
     74a:	03 c0       	rjmp	.+6      	; 0x752 <vfprintf+0x1a2>
     74c:	0b e2       	ldi	r16, 0x2B	; 43
     74e:	01 c0       	rjmp	.+2      	; 0x752 <vfprintf+0x1a2>
     750:	00 e0       	ldi	r16, 0x00	; 0
     752:	8c 85       	ldd	r24, Y+12	; 0x0c
     754:	8c 70       	andi	r24, 0x0C	; 12
     756:	19 f0       	breq	.+6      	; 0x75e <vfprintf+0x1ae>
     758:	01 11       	cpse	r16, r1
     75a:	5a c2       	rjmp	.+1204   	; 0xc10 <__DATA_REGION_LENGTH__+0x410>
     75c:	9b c2       	rjmp	.+1334   	; 0xc94 <__DATA_REGION_LENGTH__+0x494>
     75e:	97 fe       	sbrs	r9, 7
     760:	10 c0       	rjmp	.+32     	; 0x782 <vfprintf+0x1d2>
     762:	4c 0c       	add	r4, r12
     764:	fc 85       	ldd	r31, Y+12	; 0x0c
     766:	f4 ff       	sbrs	r31, 4
     768:	04 c0       	rjmp	.+8      	; 0x772 <vfprintf+0x1c2>
     76a:	8a 81       	ldd	r24, Y+2	; 0x02
     76c:	81 33       	cpi	r24, 0x31	; 49
     76e:	09 f4       	brne	.+2      	; 0x772 <vfprintf+0x1c2>
     770:	4a 94       	dec	r4
     772:	14 14       	cp	r1, r4
     774:	74 f5       	brge	.+92     	; 0x7d2 <vfprintf+0x222>
     776:	28 e0       	ldi	r18, 0x08	; 8
     778:	24 15       	cp	r18, r4
     77a:	78 f5       	brcc	.+94     	; 0x7da <vfprintf+0x22a>
     77c:	88 e0       	ldi	r24, 0x08	; 8
     77e:	48 2e       	mov	r4, r24
     780:	2c c0       	rjmp	.+88     	; 0x7da <vfprintf+0x22a>
     782:	96 fc       	sbrc	r9, 6
     784:	2a c0       	rjmp	.+84     	; 0x7da <vfprintf+0x22a>
     786:	81 2f       	mov	r24, r17
     788:	90 e0       	ldi	r25, 0x00	; 0
     78a:	8c 15       	cp	r24, r12
     78c:	9d 05       	cpc	r25, r13
     78e:	9c f0       	brlt	.+38     	; 0x7b6 <vfprintf+0x206>
     790:	3c ef       	ldi	r19, 0xFC	; 252
     792:	c3 16       	cp	r12, r19
     794:	3f ef       	ldi	r19, 0xFF	; 255
     796:	d3 06       	cpc	r13, r19
     798:	74 f0       	brlt	.+28     	; 0x7b6 <vfprintf+0x206>
     79a:	89 2d       	mov	r24, r9
     79c:	80 68       	ori	r24, 0x80	; 128
     79e:	98 2e       	mov	r9, r24
     7a0:	0a c0       	rjmp	.+20     	; 0x7b6 <vfprintf+0x206>
     7a2:	e2 e0       	ldi	r30, 0x02	; 2
     7a4:	f0 e0       	ldi	r31, 0x00	; 0
     7a6:	ec 0f       	add	r30, r28
     7a8:	fd 1f       	adc	r31, r29
     7aa:	e1 0f       	add	r30, r17
     7ac:	f1 1d       	adc	r31, r1
     7ae:	80 81       	ld	r24, Z
     7b0:	80 33       	cpi	r24, 0x30	; 48
     7b2:	19 f4       	brne	.+6      	; 0x7ba <vfprintf+0x20a>
     7b4:	11 50       	subi	r17, 0x01	; 1
     7b6:	11 11       	cpse	r17, r1
     7b8:	f4 cf       	rjmp	.-24     	; 0x7a2 <vfprintf+0x1f2>
     7ba:	97 fe       	sbrs	r9, 7
     7bc:	0e c0       	rjmp	.+28     	; 0x7da <vfprintf+0x22a>
     7be:	44 24       	eor	r4, r4
     7c0:	43 94       	inc	r4
     7c2:	41 0e       	add	r4, r17
     7c4:	81 2f       	mov	r24, r17
     7c6:	90 e0       	ldi	r25, 0x00	; 0
     7c8:	c8 16       	cp	r12, r24
     7ca:	d9 06       	cpc	r13, r25
     7cc:	2c f4       	brge	.+10     	; 0x7d8 <vfprintf+0x228>
     7ce:	1c 19       	sub	r17, r12
     7d0:	04 c0       	rjmp	.+8      	; 0x7da <vfprintf+0x22a>
     7d2:	44 24       	eor	r4, r4
     7d4:	43 94       	inc	r4
     7d6:	01 c0       	rjmp	.+2      	; 0x7da <vfprintf+0x22a>
     7d8:	10 e0       	ldi	r17, 0x00	; 0
     7da:	97 fe       	sbrs	r9, 7
     7dc:	06 c0       	rjmp	.+12     	; 0x7ea <vfprintf+0x23a>
     7de:	1c 14       	cp	r1, r12
     7e0:	1d 04       	cpc	r1, r13
     7e2:	34 f4       	brge	.+12     	; 0x7f0 <vfprintf+0x240>
     7e4:	c6 01       	movw	r24, r12
     7e6:	01 96       	adiw	r24, 0x01	; 1
     7e8:	05 c0       	rjmp	.+10     	; 0x7f4 <vfprintf+0x244>
     7ea:	85 e0       	ldi	r24, 0x05	; 5
     7ec:	90 e0       	ldi	r25, 0x00	; 0
     7ee:	02 c0       	rjmp	.+4      	; 0x7f4 <vfprintf+0x244>
     7f0:	81 e0       	ldi	r24, 0x01	; 1
     7f2:	90 e0       	ldi	r25, 0x00	; 0
     7f4:	01 11       	cpse	r16, r1
     7f6:	01 96       	adiw	r24, 0x01	; 1
     7f8:	11 23       	and	r17, r17
     7fa:	31 f0       	breq	.+12     	; 0x808 <__DATA_REGION_LENGTH__+0x8>
     7fc:	21 2f       	mov	r18, r17
     7fe:	30 e0       	ldi	r19, 0x00	; 0
     800:	2f 5f       	subi	r18, 0xFF	; 255
     802:	3f 4f       	sbci	r19, 0xFF	; 255
     804:	82 0f       	add	r24, r18
     806:	93 1f       	adc	r25, r19
     808:	25 2d       	mov	r18, r5
     80a:	30 e0       	ldi	r19, 0x00	; 0
     80c:	82 17       	cp	r24, r18
     80e:	93 07       	cpc	r25, r19
     810:	14 f4       	brge	.+4      	; 0x816 <__DATA_REGION_LENGTH__+0x16>
     812:	58 1a       	sub	r5, r24
     814:	01 c0       	rjmp	.+2      	; 0x818 <__DATA_REGION_LENGTH__+0x18>
     816:	51 2c       	mov	r5, r1
     818:	89 2d       	mov	r24, r9
     81a:	89 70       	andi	r24, 0x09	; 9
     81c:	49 f4       	brne	.+18     	; 0x830 <__DATA_REGION_LENGTH__+0x30>
     81e:	55 20       	and	r5, r5
     820:	39 f0       	breq	.+14     	; 0x830 <__DATA_REGION_LENGTH__+0x30>
     822:	b7 01       	movw	r22, r14
     824:	80 e2       	ldi	r24, 0x20	; 32
     826:	90 e0       	ldi	r25, 0x00	; 0
     828:	0e 94 74 07 	call	0xee8	; 0xee8 <fputc>
     82c:	5a 94       	dec	r5
     82e:	f7 cf       	rjmp	.-18     	; 0x81e <__DATA_REGION_LENGTH__+0x1e>
     830:	00 23       	and	r16, r16
     832:	29 f0       	breq	.+10     	; 0x83e <__DATA_REGION_LENGTH__+0x3e>
     834:	b7 01       	movw	r22, r14
     836:	80 2f       	mov	r24, r16
     838:	90 e0       	ldi	r25, 0x00	; 0
     83a:	0e 94 74 07 	call	0xee8	; 0xee8 <fputc>
     83e:	93 fc       	sbrc	r9, 3
     840:	09 c0       	rjmp	.+18     	; 0x854 <__DATA_REGION_LENGTH__+0x54>
     842:	55 20       	and	r5, r5
     844:	39 f0       	breq	.+14     	; 0x854 <__DATA_REGION_LENGTH__+0x54>
     846:	b7 01       	movw	r22, r14
     848:	80 e3       	ldi	r24, 0x30	; 48
     84a:	90 e0       	ldi	r25, 0x00	; 0
     84c:	0e 94 74 07 	call	0xee8	; 0xee8 <fputc>
     850:	5a 94       	dec	r5
     852:	f7 cf       	rjmp	.-18     	; 0x842 <__DATA_REGION_LENGTH__+0x42>
     854:	97 fe       	sbrs	r9, 7
     856:	4c c0       	rjmp	.+152    	; 0x8f0 <__DATA_REGION_LENGTH__+0xf0>
     858:	46 01       	movw	r8, r12
     85a:	d7 fe       	sbrs	r13, 7
     85c:	02 c0       	rjmp	.+4      	; 0x862 <__DATA_REGION_LENGTH__+0x62>
     85e:	81 2c       	mov	r8, r1
     860:	91 2c       	mov	r9, r1
     862:	c6 01       	movw	r24, r12
     864:	88 19       	sub	r24, r8
     866:	99 09       	sbc	r25, r9
     868:	f3 01       	movw	r30, r6
     86a:	e8 0f       	add	r30, r24
     86c:	f9 1f       	adc	r31, r25
     86e:	ed 87       	std	Y+13, r30	; 0x0d
     870:	fe 87       	std	Y+14, r31	; 0x0e
     872:	96 01       	movw	r18, r12
     874:	24 19       	sub	r18, r4
     876:	31 09       	sbc	r19, r1
     878:	2f 87       	std	Y+15, r18	; 0x0f
     87a:	38 8b       	std	Y+16, r19	; 0x10
     87c:	01 2f       	mov	r16, r17
     87e:	10 e0       	ldi	r17, 0x00	; 0
     880:	11 95       	neg	r17
     882:	01 95       	neg	r16
     884:	11 09       	sbc	r17, r1
     886:	3f ef       	ldi	r19, 0xFF	; 255
     888:	83 16       	cp	r8, r19
     88a:	93 06       	cpc	r9, r19
     88c:	29 f4       	brne	.+10     	; 0x898 <__DATA_REGION_LENGTH__+0x98>
     88e:	b7 01       	movw	r22, r14
     890:	8e e2       	ldi	r24, 0x2E	; 46
     892:	90 e0       	ldi	r25, 0x00	; 0
     894:	0e 94 74 07 	call	0xee8	; 0xee8 <fputc>
     898:	c8 14       	cp	r12, r8
     89a:	d9 04       	cpc	r13, r9
     89c:	4c f0       	brlt	.+18     	; 0x8b0 <__DATA_REGION_LENGTH__+0xb0>
     89e:	8f 85       	ldd	r24, Y+15	; 0x0f
     8a0:	98 89       	ldd	r25, Y+16	; 0x10
     8a2:	88 15       	cp	r24, r8
     8a4:	99 05       	cpc	r25, r9
     8a6:	24 f4       	brge	.+8      	; 0x8b0 <__DATA_REGION_LENGTH__+0xb0>
     8a8:	ed 85       	ldd	r30, Y+13	; 0x0d
     8aa:	fe 85       	ldd	r31, Y+14	; 0x0e
     8ac:	81 81       	ldd	r24, Z+1	; 0x01
     8ae:	01 c0       	rjmp	.+2      	; 0x8b2 <__DATA_REGION_LENGTH__+0xb2>
     8b0:	80 e3       	ldi	r24, 0x30	; 48
     8b2:	f1 e0       	ldi	r31, 0x01	; 1
     8b4:	8f 1a       	sub	r8, r31
     8b6:	91 08       	sbc	r9, r1
     8b8:	2d 85       	ldd	r18, Y+13	; 0x0d
     8ba:	3e 85       	ldd	r19, Y+14	; 0x0e
     8bc:	2f 5f       	subi	r18, 0xFF	; 255
     8be:	3f 4f       	sbci	r19, 0xFF	; 255
     8c0:	2d 87       	std	Y+13, r18	; 0x0d
     8c2:	3e 87       	std	Y+14, r19	; 0x0e
     8c4:	80 16       	cp	r8, r16
     8c6:	91 06       	cpc	r9, r17
     8c8:	2c f0       	brlt	.+10     	; 0x8d4 <__DATA_REGION_LENGTH__+0xd4>
     8ca:	b7 01       	movw	r22, r14
     8cc:	90 e0       	ldi	r25, 0x00	; 0
     8ce:	0e 94 74 07 	call	0xee8	; 0xee8 <fputc>
     8d2:	d9 cf       	rjmp	.-78     	; 0x886 <__DATA_REGION_LENGTH__+0x86>
     8d4:	c8 14       	cp	r12, r8
     8d6:	d9 04       	cpc	r13, r9
     8d8:	41 f4       	brne	.+16     	; 0x8ea <__DATA_REGION_LENGTH__+0xea>
     8da:	9a 81       	ldd	r25, Y+2	; 0x02
     8dc:	96 33       	cpi	r25, 0x36	; 54
     8de:	20 f4       	brcc	.+8      	; 0x8e8 <__DATA_REGION_LENGTH__+0xe8>
     8e0:	95 33       	cpi	r25, 0x35	; 53
     8e2:	19 f4       	brne	.+6      	; 0x8ea <__DATA_REGION_LENGTH__+0xea>
     8e4:	3c 85       	ldd	r19, Y+12	; 0x0c
     8e6:	34 ff       	sbrs	r19, 4
     8e8:	81 e3       	ldi	r24, 0x31	; 49
     8ea:	b7 01       	movw	r22, r14
     8ec:	90 e0       	ldi	r25, 0x00	; 0
     8ee:	4e c0       	rjmp	.+156    	; 0x98c <__DATA_REGION_LENGTH__+0x18c>
     8f0:	8a 81       	ldd	r24, Y+2	; 0x02
     8f2:	81 33       	cpi	r24, 0x31	; 49
     8f4:	19 f0       	breq	.+6      	; 0x8fc <__DATA_REGION_LENGTH__+0xfc>
     8f6:	9c 85       	ldd	r25, Y+12	; 0x0c
     8f8:	9f 7e       	andi	r25, 0xEF	; 239
     8fa:	9c 87       	std	Y+12, r25	; 0x0c
     8fc:	b7 01       	movw	r22, r14
     8fe:	90 e0       	ldi	r25, 0x00	; 0
     900:	0e 94 74 07 	call	0xee8	; 0xee8 <fputc>
     904:	11 11       	cpse	r17, r1
     906:	05 c0       	rjmp	.+10     	; 0x912 <__DATA_REGION_LENGTH__+0x112>
     908:	94 fc       	sbrc	r9, 4
     90a:	18 c0       	rjmp	.+48     	; 0x93c <__DATA_REGION_LENGTH__+0x13c>
     90c:	85 e6       	ldi	r24, 0x65	; 101
     90e:	90 e0       	ldi	r25, 0x00	; 0
     910:	17 c0       	rjmp	.+46     	; 0x940 <__DATA_REGION_LENGTH__+0x140>
     912:	b7 01       	movw	r22, r14
     914:	8e e2       	ldi	r24, 0x2E	; 46
     916:	90 e0       	ldi	r25, 0x00	; 0
     918:	0e 94 74 07 	call	0xee8	; 0xee8 <fputc>
     91c:	1e 5f       	subi	r17, 0xFE	; 254
     91e:	82 e0       	ldi	r24, 0x02	; 2
     920:	01 e0       	ldi	r16, 0x01	; 1
     922:	08 0f       	add	r16, r24
     924:	f3 01       	movw	r30, r6
     926:	e8 0f       	add	r30, r24
     928:	f1 1d       	adc	r31, r1
     92a:	80 81       	ld	r24, Z
     92c:	b7 01       	movw	r22, r14
     92e:	90 e0       	ldi	r25, 0x00	; 0
     930:	0e 94 74 07 	call	0xee8	; 0xee8 <fputc>
     934:	80 2f       	mov	r24, r16
     936:	01 13       	cpse	r16, r17
     938:	f3 cf       	rjmp	.-26     	; 0x920 <__DATA_REGION_LENGTH__+0x120>
     93a:	e6 cf       	rjmp	.-52     	; 0x908 <__DATA_REGION_LENGTH__+0x108>
     93c:	85 e4       	ldi	r24, 0x45	; 69
     93e:	90 e0       	ldi	r25, 0x00	; 0
     940:	b7 01       	movw	r22, r14
     942:	0e 94 74 07 	call	0xee8	; 0xee8 <fputc>
     946:	d7 fc       	sbrc	r13, 7
     948:	06 c0       	rjmp	.+12     	; 0x956 <__DATA_REGION_LENGTH__+0x156>
     94a:	c1 14       	cp	r12, r1
     94c:	d1 04       	cpc	r13, r1
     94e:	41 f4       	brne	.+16     	; 0x960 <__DATA_REGION_LENGTH__+0x160>
     950:	ec 85       	ldd	r30, Y+12	; 0x0c
     952:	e4 ff       	sbrs	r30, 4
     954:	05 c0       	rjmp	.+10     	; 0x960 <__DATA_REGION_LENGTH__+0x160>
     956:	d1 94       	neg	r13
     958:	c1 94       	neg	r12
     95a:	d1 08       	sbc	r13, r1
     95c:	8d e2       	ldi	r24, 0x2D	; 45
     95e:	01 c0       	rjmp	.+2      	; 0x962 <__DATA_REGION_LENGTH__+0x162>
     960:	8b e2       	ldi	r24, 0x2B	; 43
     962:	b7 01       	movw	r22, r14
     964:	90 e0       	ldi	r25, 0x00	; 0
     966:	0e 94 74 07 	call	0xee8	; 0xee8 <fputc>
     96a:	80 e3       	ldi	r24, 0x30	; 48
     96c:	2a e0       	ldi	r18, 0x0A	; 10
     96e:	c2 16       	cp	r12, r18
     970:	d1 04       	cpc	r13, r1
     972:	2c f0       	brlt	.+10     	; 0x97e <__DATA_REGION_LENGTH__+0x17e>
     974:	8f 5f       	subi	r24, 0xFF	; 255
     976:	fa e0       	ldi	r31, 0x0A	; 10
     978:	cf 1a       	sub	r12, r31
     97a:	d1 08       	sbc	r13, r1
     97c:	f7 cf       	rjmp	.-18     	; 0x96c <__DATA_REGION_LENGTH__+0x16c>
     97e:	b7 01       	movw	r22, r14
     980:	90 e0       	ldi	r25, 0x00	; 0
     982:	0e 94 74 07 	call	0xee8	; 0xee8 <fputc>
     986:	b7 01       	movw	r22, r14
     988:	c6 01       	movw	r24, r12
     98a:	c0 96       	adiw	r24, 0x30	; 48
     98c:	0e 94 74 07 	call	0xee8	; 0xee8 <fputc>
     990:	54 c1       	rjmp	.+680    	; 0xc3a <__DATA_REGION_LENGTH__+0x43a>
     992:	83 36       	cpi	r24, 0x63	; 99
     994:	31 f0       	breq	.+12     	; 0x9a2 <__DATA_REGION_LENGTH__+0x1a2>
     996:	83 37       	cpi	r24, 0x73	; 115
     998:	79 f0       	breq	.+30     	; 0x9b8 <__DATA_REGION_LENGTH__+0x1b8>
     99a:	83 35       	cpi	r24, 0x53	; 83
     99c:	09 f0       	breq	.+2      	; 0x9a0 <__DATA_REGION_LENGTH__+0x1a0>
     99e:	56 c0       	rjmp	.+172    	; 0xa4c <__DATA_REGION_LENGTH__+0x24c>
     9a0:	20 c0       	rjmp	.+64     	; 0x9e2 <__DATA_REGION_LENGTH__+0x1e2>
     9a2:	56 01       	movw	r10, r12
     9a4:	32 e0       	ldi	r19, 0x02	; 2
     9a6:	a3 0e       	add	r10, r19
     9a8:	b1 1c       	adc	r11, r1
     9aa:	f6 01       	movw	r30, r12
     9ac:	80 81       	ld	r24, Z
     9ae:	89 83       	std	Y+1, r24	; 0x01
     9b0:	01 e0       	ldi	r16, 0x01	; 1
     9b2:	10 e0       	ldi	r17, 0x00	; 0
     9b4:	63 01       	movw	r12, r6
     9b6:	12 c0       	rjmp	.+36     	; 0x9dc <__DATA_REGION_LENGTH__+0x1dc>
     9b8:	56 01       	movw	r10, r12
     9ba:	f2 e0       	ldi	r31, 0x02	; 2
     9bc:	af 0e       	add	r10, r31
     9be:	b1 1c       	adc	r11, r1
     9c0:	f6 01       	movw	r30, r12
     9c2:	c0 80       	ld	r12, Z
     9c4:	d1 80       	ldd	r13, Z+1	; 0x01
     9c6:	96 fe       	sbrs	r9, 6
     9c8:	03 c0       	rjmp	.+6      	; 0x9d0 <__DATA_REGION_LENGTH__+0x1d0>
     9ca:	61 2f       	mov	r22, r17
     9cc:	70 e0       	ldi	r23, 0x00	; 0
     9ce:	02 c0       	rjmp	.+4      	; 0x9d4 <__DATA_REGION_LENGTH__+0x1d4>
     9d0:	6f ef       	ldi	r22, 0xFF	; 255
     9d2:	7f ef       	ldi	r23, 0xFF	; 255
     9d4:	c6 01       	movw	r24, r12
     9d6:	0e 94 69 07 	call	0xed2	; 0xed2 <strnlen>
     9da:	8c 01       	movw	r16, r24
     9dc:	f9 2d       	mov	r31, r9
     9de:	ff 77       	andi	r31, 0x7F	; 127
     9e0:	14 c0       	rjmp	.+40     	; 0xa0a <__DATA_REGION_LENGTH__+0x20a>
     9e2:	56 01       	movw	r10, r12
     9e4:	22 e0       	ldi	r18, 0x02	; 2
     9e6:	a2 0e       	add	r10, r18
     9e8:	b1 1c       	adc	r11, r1
     9ea:	f6 01       	movw	r30, r12
     9ec:	c0 80       	ld	r12, Z
     9ee:	d1 80       	ldd	r13, Z+1	; 0x01
     9f0:	96 fe       	sbrs	r9, 6
     9f2:	03 c0       	rjmp	.+6      	; 0x9fa <__DATA_REGION_LENGTH__+0x1fa>
     9f4:	61 2f       	mov	r22, r17
     9f6:	70 e0       	ldi	r23, 0x00	; 0
     9f8:	02 c0       	rjmp	.+4      	; 0x9fe <__DATA_REGION_LENGTH__+0x1fe>
     9fa:	6f ef       	ldi	r22, 0xFF	; 255
     9fc:	7f ef       	ldi	r23, 0xFF	; 255
     9fe:	c6 01       	movw	r24, r12
     a00:	0e 94 5e 07 	call	0xebc	; 0xebc <strnlen_P>
     a04:	8c 01       	movw	r16, r24
     a06:	f9 2d       	mov	r31, r9
     a08:	f0 68       	ori	r31, 0x80	; 128
     a0a:	9f 2e       	mov	r9, r31
     a0c:	f3 fd       	sbrc	r31, 3
     a0e:	1a c0       	rjmp	.+52     	; 0xa44 <__DATA_REGION_LENGTH__+0x244>
     a10:	85 2d       	mov	r24, r5
     a12:	90 e0       	ldi	r25, 0x00	; 0
     a14:	08 17       	cp	r16, r24
     a16:	19 07       	cpc	r17, r25
     a18:	a8 f4       	brcc	.+42     	; 0xa44 <__DATA_REGION_LENGTH__+0x244>
     a1a:	b7 01       	movw	r22, r14
     a1c:	80 e2       	ldi	r24, 0x20	; 32
     a1e:	90 e0       	ldi	r25, 0x00	; 0
     a20:	0e 94 74 07 	call	0xee8	; 0xee8 <fputc>
     a24:	5a 94       	dec	r5
     a26:	f4 cf       	rjmp	.-24     	; 0xa10 <__DATA_REGION_LENGTH__+0x210>
     a28:	f6 01       	movw	r30, r12
     a2a:	97 fc       	sbrc	r9, 7
     a2c:	85 91       	lpm	r24, Z+
     a2e:	97 fe       	sbrs	r9, 7
     a30:	81 91       	ld	r24, Z+
     a32:	6f 01       	movw	r12, r30
     a34:	b7 01       	movw	r22, r14
     a36:	90 e0       	ldi	r25, 0x00	; 0
     a38:	0e 94 74 07 	call	0xee8	; 0xee8 <fputc>
     a3c:	51 10       	cpse	r5, r1
     a3e:	5a 94       	dec	r5
     a40:	01 50       	subi	r16, 0x01	; 1
     a42:	11 09       	sbc	r17, r1
     a44:	01 15       	cp	r16, r1
     a46:	11 05       	cpc	r17, r1
     a48:	79 f7       	brne	.-34     	; 0xa28 <__DATA_REGION_LENGTH__+0x228>
     a4a:	f7 c0       	rjmp	.+494    	; 0xc3a <__DATA_REGION_LENGTH__+0x43a>
     a4c:	84 36       	cpi	r24, 0x64	; 100
     a4e:	11 f0       	breq	.+4      	; 0xa54 <__DATA_REGION_LENGTH__+0x254>
     a50:	89 36       	cpi	r24, 0x69	; 105
     a52:	61 f5       	brne	.+88     	; 0xaac <__DATA_REGION_LENGTH__+0x2ac>
     a54:	56 01       	movw	r10, r12
     a56:	97 fe       	sbrs	r9, 7
     a58:	09 c0       	rjmp	.+18     	; 0xa6c <__DATA_REGION_LENGTH__+0x26c>
     a5a:	24 e0       	ldi	r18, 0x04	; 4
     a5c:	a2 0e       	add	r10, r18
     a5e:	b1 1c       	adc	r11, r1
     a60:	f6 01       	movw	r30, r12
     a62:	60 81       	ld	r22, Z
     a64:	71 81       	ldd	r23, Z+1	; 0x01
     a66:	82 81       	ldd	r24, Z+2	; 0x02
     a68:	93 81       	ldd	r25, Z+3	; 0x03
     a6a:	0a c0       	rjmp	.+20     	; 0xa80 <__DATA_REGION_LENGTH__+0x280>
     a6c:	f2 e0       	ldi	r31, 0x02	; 2
     a6e:	af 0e       	add	r10, r31
     a70:	b1 1c       	adc	r11, r1
     a72:	f6 01       	movw	r30, r12
     a74:	60 81       	ld	r22, Z
     a76:	71 81       	ldd	r23, Z+1	; 0x01
     a78:	07 2e       	mov	r0, r23
     a7a:	00 0c       	add	r0, r0
     a7c:	88 0b       	sbc	r24, r24
     a7e:	99 0b       	sbc	r25, r25
     a80:	f9 2d       	mov	r31, r9
     a82:	ff 76       	andi	r31, 0x6F	; 111
     a84:	9f 2e       	mov	r9, r31
     a86:	97 ff       	sbrs	r25, 7
     a88:	09 c0       	rjmp	.+18     	; 0xa9c <__DATA_REGION_LENGTH__+0x29c>
     a8a:	90 95       	com	r25
     a8c:	80 95       	com	r24
     a8e:	70 95       	com	r23
     a90:	61 95       	neg	r22
     a92:	7f 4f       	sbci	r23, 0xFF	; 255
     a94:	8f 4f       	sbci	r24, 0xFF	; 255
     a96:	9f 4f       	sbci	r25, 0xFF	; 255
     a98:	f0 68       	ori	r31, 0x80	; 128
     a9a:	9f 2e       	mov	r9, r31
     a9c:	2a e0       	ldi	r18, 0x0A	; 10
     a9e:	30 e0       	ldi	r19, 0x00	; 0
     aa0:	a3 01       	movw	r20, r6
     aa2:	0e 94 b0 07 	call	0xf60	; 0xf60 <__ultoa_invert>
     aa6:	c8 2e       	mov	r12, r24
     aa8:	c6 18       	sub	r12, r6
     aaa:	3f c0       	rjmp	.+126    	; 0xb2a <__DATA_REGION_LENGTH__+0x32a>
     aac:	09 2d       	mov	r16, r9
     aae:	85 37       	cpi	r24, 0x75	; 117
     ab0:	21 f4       	brne	.+8      	; 0xaba <__DATA_REGION_LENGTH__+0x2ba>
     ab2:	0f 7e       	andi	r16, 0xEF	; 239
     ab4:	2a e0       	ldi	r18, 0x0A	; 10
     ab6:	30 e0       	ldi	r19, 0x00	; 0
     ab8:	1d c0       	rjmp	.+58     	; 0xaf4 <__DATA_REGION_LENGTH__+0x2f4>
     aba:	09 7f       	andi	r16, 0xF9	; 249
     abc:	8f 36       	cpi	r24, 0x6F	; 111
     abe:	91 f0       	breq	.+36     	; 0xae4 <__DATA_REGION_LENGTH__+0x2e4>
     ac0:	18 f4       	brcc	.+6      	; 0xac8 <__DATA_REGION_LENGTH__+0x2c8>
     ac2:	88 35       	cpi	r24, 0x58	; 88
     ac4:	59 f0       	breq	.+22     	; 0xadc <__DATA_REGION_LENGTH__+0x2dc>
     ac6:	c3 c0       	rjmp	.+390    	; 0xc4e <__DATA_REGION_LENGTH__+0x44e>
     ac8:	80 37       	cpi	r24, 0x70	; 112
     aca:	19 f0       	breq	.+6      	; 0xad2 <__DATA_REGION_LENGTH__+0x2d2>
     acc:	88 37       	cpi	r24, 0x78	; 120
     ace:	11 f0       	breq	.+4      	; 0xad4 <__DATA_REGION_LENGTH__+0x2d4>
     ad0:	be c0       	rjmp	.+380    	; 0xc4e <__DATA_REGION_LENGTH__+0x44e>
     ad2:	00 61       	ori	r16, 0x10	; 16
     ad4:	04 ff       	sbrs	r16, 4
     ad6:	09 c0       	rjmp	.+18     	; 0xaea <__DATA_REGION_LENGTH__+0x2ea>
     ad8:	04 60       	ori	r16, 0x04	; 4
     ada:	07 c0       	rjmp	.+14     	; 0xaea <__DATA_REGION_LENGTH__+0x2ea>
     adc:	94 fe       	sbrs	r9, 4
     ade:	08 c0       	rjmp	.+16     	; 0xaf0 <__DATA_REGION_LENGTH__+0x2f0>
     ae0:	06 60       	ori	r16, 0x06	; 6
     ae2:	06 c0       	rjmp	.+12     	; 0xaf0 <__DATA_REGION_LENGTH__+0x2f0>
     ae4:	28 e0       	ldi	r18, 0x08	; 8
     ae6:	30 e0       	ldi	r19, 0x00	; 0
     ae8:	05 c0       	rjmp	.+10     	; 0xaf4 <__DATA_REGION_LENGTH__+0x2f4>
     aea:	20 e1       	ldi	r18, 0x10	; 16
     aec:	30 e0       	ldi	r19, 0x00	; 0
     aee:	02 c0       	rjmp	.+4      	; 0xaf4 <__DATA_REGION_LENGTH__+0x2f4>
     af0:	20 e1       	ldi	r18, 0x10	; 16
     af2:	32 e0       	ldi	r19, 0x02	; 2
     af4:	56 01       	movw	r10, r12
     af6:	07 ff       	sbrs	r16, 7
     af8:	09 c0       	rjmp	.+18     	; 0xb0c <__DATA_REGION_LENGTH__+0x30c>
     afa:	84 e0       	ldi	r24, 0x04	; 4
     afc:	a8 0e       	add	r10, r24
     afe:	b1 1c       	adc	r11, r1
     b00:	f6 01       	movw	r30, r12
     b02:	60 81       	ld	r22, Z
     b04:	71 81       	ldd	r23, Z+1	; 0x01
     b06:	82 81       	ldd	r24, Z+2	; 0x02
     b08:	93 81       	ldd	r25, Z+3	; 0x03
     b0a:	08 c0       	rjmp	.+16     	; 0xb1c <__DATA_REGION_LENGTH__+0x31c>
     b0c:	f2 e0       	ldi	r31, 0x02	; 2
     b0e:	af 0e       	add	r10, r31
     b10:	b1 1c       	adc	r11, r1
     b12:	f6 01       	movw	r30, r12
     b14:	60 81       	ld	r22, Z
     b16:	71 81       	ldd	r23, Z+1	; 0x01
     b18:	80 e0       	ldi	r24, 0x00	; 0
     b1a:	90 e0       	ldi	r25, 0x00	; 0
     b1c:	a3 01       	movw	r20, r6
     b1e:	0e 94 b0 07 	call	0xf60	; 0xf60 <__ultoa_invert>
     b22:	c8 2e       	mov	r12, r24
     b24:	c6 18       	sub	r12, r6
     b26:	0f 77       	andi	r16, 0x7F	; 127
     b28:	90 2e       	mov	r9, r16
     b2a:	96 fe       	sbrs	r9, 6
     b2c:	0b c0       	rjmp	.+22     	; 0xb44 <__DATA_REGION_LENGTH__+0x344>
     b2e:	09 2d       	mov	r16, r9
     b30:	0e 7f       	andi	r16, 0xFE	; 254
     b32:	c1 16       	cp	r12, r17
     b34:	50 f4       	brcc	.+20     	; 0xb4a <__DATA_REGION_LENGTH__+0x34a>
     b36:	94 fe       	sbrs	r9, 4
     b38:	0a c0       	rjmp	.+20     	; 0xb4e <__DATA_REGION_LENGTH__+0x34e>
     b3a:	92 fc       	sbrc	r9, 2
     b3c:	08 c0       	rjmp	.+16     	; 0xb4e <__DATA_REGION_LENGTH__+0x34e>
     b3e:	09 2d       	mov	r16, r9
     b40:	0e 7e       	andi	r16, 0xEE	; 238
     b42:	05 c0       	rjmp	.+10     	; 0xb4e <__DATA_REGION_LENGTH__+0x34e>
     b44:	dc 2c       	mov	r13, r12
     b46:	09 2d       	mov	r16, r9
     b48:	03 c0       	rjmp	.+6      	; 0xb50 <__DATA_REGION_LENGTH__+0x350>
     b4a:	dc 2c       	mov	r13, r12
     b4c:	01 c0       	rjmp	.+2      	; 0xb50 <__DATA_REGION_LENGTH__+0x350>
     b4e:	d1 2e       	mov	r13, r17
     b50:	04 ff       	sbrs	r16, 4
     b52:	0d c0       	rjmp	.+26     	; 0xb6e <__DATA_REGION_LENGTH__+0x36e>
     b54:	fe 01       	movw	r30, r28
     b56:	ec 0d       	add	r30, r12
     b58:	f1 1d       	adc	r31, r1
     b5a:	80 81       	ld	r24, Z
     b5c:	80 33       	cpi	r24, 0x30	; 48
     b5e:	11 f4       	brne	.+4      	; 0xb64 <__DATA_REGION_LENGTH__+0x364>
     b60:	09 7e       	andi	r16, 0xE9	; 233
     b62:	09 c0       	rjmp	.+18     	; 0xb76 <__DATA_REGION_LENGTH__+0x376>
     b64:	02 ff       	sbrs	r16, 2
     b66:	06 c0       	rjmp	.+12     	; 0xb74 <__DATA_REGION_LENGTH__+0x374>
     b68:	d3 94       	inc	r13
     b6a:	d3 94       	inc	r13
     b6c:	04 c0       	rjmp	.+8      	; 0xb76 <__DATA_REGION_LENGTH__+0x376>
     b6e:	80 2f       	mov	r24, r16
     b70:	86 78       	andi	r24, 0x86	; 134
     b72:	09 f0       	breq	.+2      	; 0xb76 <__DATA_REGION_LENGTH__+0x376>
     b74:	d3 94       	inc	r13
     b76:	03 fd       	sbrc	r16, 3
     b78:	11 c0       	rjmp	.+34     	; 0xb9c <__DATA_REGION_LENGTH__+0x39c>
     b7a:	00 ff       	sbrs	r16, 0
     b7c:	06 c0       	rjmp	.+12     	; 0xb8a <__DATA_REGION_LENGTH__+0x38a>
     b7e:	1c 2d       	mov	r17, r12
     b80:	d5 14       	cp	r13, r5
     b82:	80 f4       	brcc	.+32     	; 0xba4 <__DATA_REGION_LENGTH__+0x3a4>
     b84:	15 0d       	add	r17, r5
     b86:	1d 19       	sub	r17, r13
     b88:	0d c0       	rjmp	.+26     	; 0xba4 <__DATA_REGION_LENGTH__+0x3a4>
     b8a:	d5 14       	cp	r13, r5
     b8c:	58 f4       	brcc	.+22     	; 0xba4 <__DATA_REGION_LENGTH__+0x3a4>
     b8e:	b7 01       	movw	r22, r14
     b90:	80 e2       	ldi	r24, 0x20	; 32
     b92:	90 e0       	ldi	r25, 0x00	; 0
     b94:	0e 94 74 07 	call	0xee8	; 0xee8 <fputc>
     b98:	d3 94       	inc	r13
     b9a:	f7 cf       	rjmp	.-18     	; 0xb8a <__DATA_REGION_LENGTH__+0x38a>
     b9c:	d5 14       	cp	r13, r5
     b9e:	10 f4       	brcc	.+4      	; 0xba4 <__DATA_REGION_LENGTH__+0x3a4>
     ba0:	5d 18       	sub	r5, r13
     ba2:	01 c0       	rjmp	.+2      	; 0xba6 <__DATA_REGION_LENGTH__+0x3a6>
     ba4:	51 2c       	mov	r5, r1
     ba6:	04 ff       	sbrs	r16, 4
     ba8:	10 c0       	rjmp	.+32     	; 0xbca <__DATA_REGION_LENGTH__+0x3ca>
     baa:	b7 01       	movw	r22, r14
     bac:	80 e3       	ldi	r24, 0x30	; 48
     bae:	90 e0       	ldi	r25, 0x00	; 0
     bb0:	0e 94 74 07 	call	0xee8	; 0xee8 <fputc>
     bb4:	02 ff       	sbrs	r16, 2
     bb6:	17 c0       	rjmp	.+46     	; 0xbe6 <__DATA_REGION_LENGTH__+0x3e6>
     bb8:	01 fd       	sbrc	r16, 1
     bba:	03 c0       	rjmp	.+6      	; 0xbc2 <__DATA_REGION_LENGTH__+0x3c2>
     bbc:	88 e7       	ldi	r24, 0x78	; 120
     bbe:	90 e0       	ldi	r25, 0x00	; 0
     bc0:	02 c0       	rjmp	.+4      	; 0xbc6 <__DATA_REGION_LENGTH__+0x3c6>
     bc2:	88 e5       	ldi	r24, 0x58	; 88
     bc4:	90 e0       	ldi	r25, 0x00	; 0
     bc6:	b7 01       	movw	r22, r14
     bc8:	0c c0       	rjmp	.+24     	; 0xbe2 <__DATA_REGION_LENGTH__+0x3e2>
     bca:	80 2f       	mov	r24, r16
     bcc:	86 78       	andi	r24, 0x86	; 134
     bce:	59 f0       	breq	.+22     	; 0xbe6 <__DATA_REGION_LENGTH__+0x3e6>
     bd0:	01 ff       	sbrs	r16, 1
     bd2:	02 c0       	rjmp	.+4      	; 0xbd8 <__DATA_REGION_LENGTH__+0x3d8>
     bd4:	8b e2       	ldi	r24, 0x2B	; 43
     bd6:	01 c0       	rjmp	.+2      	; 0xbda <__DATA_REGION_LENGTH__+0x3da>
     bd8:	80 e2       	ldi	r24, 0x20	; 32
     bda:	07 fd       	sbrc	r16, 7
     bdc:	8d e2       	ldi	r24, 0x2D	; 45
     bde:	b7 01       	movw	r22, r14
     be0:	90 e0       	ldi	r25, 0x00	; 0
     be2:	0e 94 74 07 	call	0xee8	; 0xee8 <fputc>
     be6:	c1 16       	cp	r12, r17
     be8:	38 f4       	brcc	.+14     	; 0xbf8 <__DATA_REGION_LENGTH__+0x3f8>
     bea:	b7 01       	movw	r22, r14
     bec:	80 e3       	ldi	r24, 0x30	; 48
     bee:	90 e0       	ldi	r25, 0x00	; 0
     bf0:	0e 94 74 07 	call	0xee8	; 0xee8 <fputc>
     bf4:	11 50       	subi	r17, 0x01	; 1
     bf6:	f7 cf       	rjmp	.-18     	; 0xbe6 <__DATA_REGION_LENGTH__+0x3e6>
     bf8:	ca 94       	dec	r12
     bfa:	f3 01       	movw	r30, r6
     bfc:	ec 0d       	add	r30, r12
     bfe:	f1 1d       	adc	r31, r1
     c00:	80 81       	ld	r24, Z
     c02:	b7 01       	movw	r22, r14
     c04:	90 e0       	ldi	r25, 0x00	; 0
     c06:	0e 94 74 07 	call	0xee8	; 0xee8 <fputc>
     c0a:	c1 10       	cpse	r12, r1
     c0c:	f5 cf       	rjmp	.-22     	; 0xbf8 <__DATA_REGION_LENGTH__+0x3f8>
     c0e:	15 c0       	rjmp	.+42     	; 0xc3a <__DATA_REGION_LENGTH__+0x43a>
     c10:	f4 e0       	ldi	r31, 0x04	; 4
     c12:	f5 15       	cp	r31, r5
     c14:	60 f5       	brcc	.+88     	; 0xc6e <__DATA_REGION_LENGTH__+0x46e>
     c16:	84 e0       	ldi	r24, 0x04	; 4
     c18:	58 1a       	sub	r5, r24
     c1a:	93 fe       	sbrs	r9, 3
     c1c:	1f c0       	rjmp	.+62     	; 0xc5c <__DATA_REGION_LENGTH__+0x45c>
     c1e:	01 11       	cpse	r16, r1
     c20:	27 c0       	rjmp	.+78     	; 0xc70 <__DATA_REGION_LENGTH__+0x470>
     c22:	2c 85       	ldd	r18, Y+12	; 0x0c
     c24:	23 ff       	sbrs	r18, 3
     c26:	2a c0       	rjmp	.+84     	; 0xc7c <__DATA_REGION_LENGTH__+0x47c>
     c28:	08 e7       	ldi	r16, 0x78	; 120
     c2a:	10 e0       	ldi	r17, 0x00	; 0
     c2c:	39 2d       	mov	r19, r9
     c2e:	30 71       	andi	r19, 0x10	; 16
     c30:	93 2e       	mov	r9, r19
     c32:	f8 01       	movw	r30, r16
     c34:	84 91       	lpm	r24, Z
     c36:	81 11       	cpse	r24, r1
     c38:	24 c0       	rjmp	.+72     	; 0xc82 <__DATA_REGION_LENGTH__+0x482>
     c3a:	55 20       	and	r5, r5
     c3c:	09 f4       	brne	.+2      	; 0xc40 <__DATA_REGION_LENGTH__+0x440>
     c3e:	e4 cc       	rjmp	.-1592   	; 0x608 <vfprintf+0x58>
     c40:	b7 01       	movw	r22, r14
     c42:	80 e2       	ldi	r24, 0x20	; 32
     c44:	90 e0       	ldi	r25, 0x00	; 0
     c46:	0e 94 74 07 	call	0xee8	; 0xee8 <fputc>
     c4a:	5a 94       	dec	r5
     c4c:	f6 cf       	rjmp	.-20     	; 0xc3a <__DATA_REGION_LENGTH__+0x43a>
     c4e:	f7 01       	movw	r30, r14
     c50:	86 81       	ldd	r24, Z+6	; 0x06
     c52:	97 81       	ldd	r25, Z+7	; 0x07
     c54:	26 c0       	rjmp	.+76     	; 0xca2 <__DATA_REGION_LENGTH__+0x4a2>
     c56:	8f ef       	ldi	r24, 0xFF	; 255
     c58:	9f ef       	ldi	r25, 0xFF	; 255
     c5a:	23 c0       	rjmp	.+70     	; 0xca2 <__DATA_REGION_LENGTH__+0x4a2>
     c5c:	b7 01       	movw	r22, r14
     c5e:	80 e2       	ldi	r24, 0x20	; 32
     c60:	90 e0       	ldi	r25, 0x00	; 0
     c62:	0e 94 74 07 	call	0xee8	; 0xee8 <fputc>
     c66:	5a 94       	dec	r5
     c68:	51 10       	cpse	r5, r1
     c6a:	f8 cf       	rjmp	.-16     	; 0xc5c <__DATA_REGION_LENGTH__+0x45c>
     c6c:	d8 cf       	rjmp	.-80     	; 0xc1e <__DATA_REGION_LENGTH__+0x41e>
     c6e:	51 2c       	mov	r5, r1
     c70:	b7 01       	movw	r22, r14
     c72:	80 2f       	mov	r24, r16
     c74:	90 e0       	ldi	r25, 0x00	; 0
     c76:	0e 94 74 07 	call	0xee8	; 0xee8 <fputc>
     c7a:	d3 cf       	rjmp	.-90     	; 0xc22 <__DATA_REGION_LENGTH__+0x422>
     c7c:	0c e7       	ldi	r16, 0x7C	; 124
     c7e:	10 e0       	ldi	r17, 0x00	; 0
     c80:	d5 cf       	rjmp	.-86     	; 0xc2c <__DATA_REGION_LENGTH__+0x42c>
     c82:	91 10       	cpse	r9, r1
     c84:	80 52       	subi	r24, 0x20	; 32
     c86:	b7 01       	movw	r22, r14
     c88:	90 e0       	ldi	r25, 0x00	; 0
     c8a:	0e 94 74 07 	call	0xee8	; 0xee8 <fputc>
     c8e:	0f 5f       	subi	r16, 0xFF	; 255
     c90:	1f 4f       	sbci	r17, 0xFF	; 255
     c92:	cf cf       	rjmp	.-98     	; 0xc32 <__DATA_REGION_LENGTH__+0x432>
     c94:	23 e0       	ldi	r18, 0x03	; 3
     c96:	25 15       	cp	r18, r5
     c98:	10 f4       	brcc	.+4      	; 0xc9e <__DATA_REGION_LENGTH__+0x49e>
     c9a:	83 e0       	ldi	r24, 0x03	; 3
     c9c:	bd cf       	rjmp	.-134    	; 0xc18 <__DATA_REGION_LENGTH__+0x418>
     c9e:	51 2c       	mov	r5, r1
     ca0:	c0 cf       	rjmp	.-128    	; 0xc22 <__DATA_REGION_LENGTH__+0x422>
     ca2:	60 96       	adiw	r28, 0x10	; 16
     ca4:	e2 e1       	ldi	r30, 0x12	; 18
     ca6:	0c 94 6e 06 	jmp	0xcdc	; 0xcdc <__epilogue_restores__>

00000caa <__prologue_saves__>:
     caa:	2f 92       	push	r2
     cac:	3f 92       	push	r3
     cae:	4f 92       	push	r4
     cb0:	5f 92       	push	r5
     cb2:	6f 92       	push	r6
     cb4:	7f 92       	push	r7
     cb6:	8f 92       	push	r8
     cb8:	9f 92       	push	r9
     cba:	af 92       	push	r10
     cbc:	bf 92       	push	r11
     cbe:	cf 92       	push	r12
     cc0:	df 92       	push	r13
     cc2:	ef 92       	push	r14
     cc4:	ff 92       	push	r15
     cc6:	0f 93       	push	r16
     cc8:	1f 93       	push	r17
     cca:	cf 93       	push	r28
     ccc:	df 93       	push	r29
     cce:	cd b7       	in	r28, 0x3d	; 61
     cd0:	de b7       	in	r29, 0x3e	; 62
     cd2:	ca 1b       	sub	r28, r26
     cd4:	db 0b       	sbc	r29, r27
     cd6:	cd bf       	out	0x3d, r28	; 61
     cd8:	de bf       	out	0x3e, r29	; 62
     cda:	09 94       	ijmp

00000cdc <__epilogue_restores__>:
     cdc:	2a 88       	ldd	r2, Y+18	; 0x12
     cde:	39 88       	ldd	r3, Y+17	; 0x11
     ce0:	48 88       	ldd	r4, Y+16	; 0x10
     ce2:	5f 84       	ldd	r5, Y+15	; 0x0f
     ce4:	6e 84       	ldd	r6, Y+14	; 0x0e
     ce6:	7d 84       	ldd	r7, Y+13	; 0x0d
     ce8:	8c 84       	ldd	r8, Y+12	; 0x0c
     cea:	9b 84       	ldd	r9, Y+11	; 0x0b
     cec:	aa 84       	ldd	r10, Y+10	; 0x0a
     cee:	b9 84       	ldd	r11, Y+9	; 0x09
     cf0:	c8 84       	ldd	r12, Y+8	; 0x08
     cf2:	df 80       	ldd	r13, Y+7	; 0x07
     cf4:	ee 80       	ldd	r14, Y+6	; 0x06
     cf6:	fd 80       	ldd	r15, Y+5	; 0x05
     cf8:	0c 81       	ldd	r16, Y+4	; 0x04
     cfa:	1b 81       	ldd	r17, Y+3	; 0x03
     cfc:	aa 81       	ldd	r26, Y+2	; 0x02
     cfe:	b9 81       	ldd	r27, Y+1	; 0x01
     d00:	ce 0f       	add	r28, r30
     d02:	d1 1d       	adc	r29, r1
     d04:	cd bf       	out	0x3d, r28	; 61
     d06:	de bf       	out	0x3e, r29	; 62
     d08:	ed 01       	movw	r28, r26
     d0a:	08 95       	ret

00000d0c <__ftoa_engine>:
     d0c:	28 30       	cpi	r18, 0x08	; 8
     d0e:	08 f0       	brcs	.+2      	; 0xd12 <__ftoa_engine+0x6>
     d10:	27 e0       	ldi	r18, 0x07	; 7
     d12:	33 27       	eor	r19, r19
     d14:	da 01       	movw	r26, r20
     d16:	99 0f       	add	r25, r25
     d18:	31 1d       	adc	r19, r1
     d1a:	87 fd       	sbrc	r24, 7
     d1c:	91 60       	ori	r25, 0x01	; 1
     d1e:	00 96       	adiw	r24, 0x00	; 0
     d20:	61 05       	cpc	r22, r1
     d22:	71 05       	cpc	r23, r1
     d24:	39 f4       	brne	.+14     	; 0xd34 <__ftoa_engine+0x28>
     d26:	32 60       	ori	r19, 0x02	; 2
     d28:	2e 5f       	subi	r18, 0xFE	; 254
     d2a:	3d 93       	st	X+, r19
     d2c:	30 e3       	ldi	r19, 0x30	; 48
     d2e:	2a 95       	dec	r18
     d30:	e1 f7       	brne	.-8      	; 0xd2a <__ftoa_engine+0x1e>
     d32:	08 95       	ret
     d34:	9f 3f       	cpi	r25, 0xFF	; 255
     d36:	30 f0       	brcs	.+12     	; 0xd44 <__ftoa_engine+0x38>
     d38:	80 38       	cpi	r24, 0x80	; 128
     d3a:	71 05       	cpc	r23, r1
     d3c:	61 05       	cpc	r22, r1
     d3e:	09 f0       	breq	.+2      	; 0xd42 <__ftoa_engine+0x36>
     d40:	3c 5f       	subi	r19, 0xFC	; 252
     d42:	3c 5f       	subi	r19, 0xFC	; 252
     d44:	3d 93       	st	X+, r19
     d46:	91 30       	cpi	r25, 0x01	; 1
     d48:	08 f0       	brcs	.+2      	; 0xd4c <__ftoa_engine+0x40>
     d4a:	80 68       	ori	r24, 0x80	; 128
     d4c:	91 1d       	adc	r25, r1
     d4e:	df 93       	push	r29
     d50:	cf 93       	push	r28
     d52:	1f 93       	push	r17
     d54:	0f 93       	push	r16
     d56:	ff 92       	push	r15
     d58:	ef 92       	push	r14
     d5a:	19 2f       	mov	r17, r25
     d5c:	98 7f       	andi	r25, 0xF8	; 248
     d5e:	96 95       	lsr	r25
     d60:	e9 2f       	mov	r30, r25
     d62:	96 95       	lsr	r25
     d64:	96 95       	lsr	r25
     d66:	e9 0f       	add	r30, r25
     d68:	ff 27       	eor	r31, r31
     d6a:	e6 52       	subi	r30, 0x26	; 38
     d6c:	ff 4f       	sbci	r31, 0xFF	; 255
     d6e:	99 27       	eor	r25, r25
     d70:	33 27       	eor	r19, r19
     d72:	ee 24       	eor	r14, r14
     d74:	ff 24       	eor	r15, r15
     d76:	a7 01       	movw	r20, r14
     d78:	e7 01       	movw	r28, r14
     d7a:	05 90       	lpm	r0, Z+
     d7c:	08 94       	sec
     d7e:	07 94       	ror	r0
     d80:	28 f4       	brcc	.+10     	; 0xd8c <__ftoa_engine+0x80>
     d82:	36 0f       	add	r19, r22
     d84:	e7 1e       	adc	r14, r23
     d86:	f8 1e       	adc	r15, r24
     d88:	49 1f       	adc	r20, r25
     d8a:	51 1d       	adc	r21, r1
     d8c:	66 0f       	add	r22, r22
     d8e:	77 1f       	adc	r23, r23
     d90:	88 1f       	adc	r24, r24
     d92:	99 1f       	adc	r25, r25
     d94:	06 94       	lsr	r0
     d96:	a1 f7       	brne	.-24     	; 0xd80 <__ftoa_engine+0x74>
     d98:	05 90       	lpm	r0, Z+
     d9a:	07 94       	ror	r0
     d9c:	28 f4       	brcc	.+10     	; 0xda8 <__ftoa_engine+0x9c>
     d9e:	e7 0e       	add	r14, r23
     da0:	f8 1e       	adc	r15, r24
     da2:	49 1f       	adc	r20, r25
     da4:	56 1f       	adc	r21, r22
     da6:	c1 1d       	adc	r28, r1
     da8:	77 0f       	add	r23, r23
     daa:	88 1f       	adc	r24, r24
     dac:	99 1f       	adc	r25, r25
     dae:	66 1f       	adc	r22, r22
     db0:	06 94       	lsr	r0
     db2:	a1 f7       	brne	.-24     	; 0xd9c <__ftoa_engine+0x90>
     db4:	05 90       	lpm	r0, Z+
     db6:	07 94       	ror	r0
     db8:	28 f4       	brcc	.+10     	; 0xdc4 <__ftoa_engine+0xb8>
     dba:	f8 0e       	add	r15, r24
     dbc:	49 1f       	adc	r20, r25
     dbe:	56 1f       	adc	r21, r22
     dc0:	c7 1f       	adc	r28, r23
     dc2:	d1 1d       	adc	r29, r1
     dc4:	88 0f       	add	r24, r24
     dc6:	99 1f       	adc	r25, r25
     dc8:	66 1f       	adc	r22, r22
     dca:	77 1f       	adc	r23, r23
     dcc:	06 94       	lsr	r0
     dce:	a1 f7       	brne	.-24     	; 0xdb8 <__ftoa_engine+0xac>
     dd0:	05 90       	lpm	r0, Z+
     dd2:	07 94       	ror	r0
     dd4:	20 f4       	brcc	.+8      	; 0xdde <__ftoa_engine+0xd2>
     dd6:	49 0f       	add	r20, r25
     dd8:	56 1f       	adc	r21, r22
     dda:	c7 1f       	adc	r28, r23
     ddc:	d8 1f       	adc	r29, r24
     dde:	99 0f       	add	r25, r25
     de0:	66 1f       	adc	r22, r22
     de2:	77 1f       	adc	r23, r23
     de4:	88 1f       	adc	r24, r24
     de6:	06 94       	lsr	r0
     de8:	a9 f7       	brne	.-22     	; 0xdd4 <__ftoa_engine+0xc8>
     dea:	84 91       	lpm	r24, Z
     dec:	10 95       	com	r17
     dee:	17 70       	andi	r17, 0x07	; 7
     df0:	41 f0       	breq	.+16     	; 0xe02 <__ftoa_engine+0xf6>
     df2:	d6 95       	lsr	r29
     df4:	c7 95       	ror	r28
     df6:	57 95       	ror	r21
     df8:	47 95       	ror	r20
     dfa:	f7 94       	ror	r15
     dfc:	e7 94       	ror	r14
     dfe:	1a 95       	dec	r17
     e00:	c1 f7       	brne	.-16     	; 0xdf2 <__ftoa_engine+0xe6>
     e02:	e0 e8       	ldi	r30, 0x80	; 128
     e04:	f0 e0       	ldi	r31, 0x00	; 0
     e06:	68 94       	set
     e08:	15 90       	lpm	r1, Z+
     e0a:	15 91       	lpm	r17, Z+
     e0c:	35 91       	lpm	r19, Z+
     e0e:	65 91       	lpm	r22, Z+
     e10:	95 91       	lpm	r25, Z+
     e12:	05 90       	lpm	r0, Z+
     e14:	7f e2       	ldi	r23, 0x2F	; 47
     e16:	73 95       	inc	r23
     e18:	e1 18       	sub	r14, r1
     e1a:	f1 0a       	sbc	r15, r17
     e1c:	43 0b       	sbc	r20, r19
     e1e:	56 0b       	sbc	r21, r22
     e20:	c9 0b       	sbc	r28, r25
     e22:	d0 09       	sbc	r29, r0
     e24:	c0 f7       	brcc	.-16     	; 0xe16 <__ftoa_engine+0x10a>
     e26:	e1 0c       	add	r14, r1
     e28:	f1 1e       	adc	r15, r17
     e2a:	43 1f       	adc	r20, r19
     e2c:	56 1f       	adc	r21, r22
     e2e:	c9 1f       	adc	r28, r25
     e30:	d0 1d       	adc	r29, r0
     e32:	7e f4       	brtc	.+30     	; 0xe52 <__ftoa_engine+0x146>
     e34:	70 33       	cpi	r23, 0x30	; 48
     e36:	11 f4       	brne	.+4      	; 0xe3c <__ftoa_engine+0x130>
     e38:	8a 95       	dec	r24
     e3a:	e6 cf       	rjmp	.-52     	; 0xe08 <__ftoa_engine+0xfc>
     e3c:	e8 94       	clt
     e3e:	01 50       	subi	r16, 0x01	; 1
     e40:	30 f0       	brcs	.+12     	; 0xe4e <__ftoa_engine+0x142>
     e42:	08 0f       	add	r16, r24
     e44:	0a f4       	brpl	.+2      	; 0xe48 <__ftoa_engine+0x13c>
     e46:	00 27       	eor	r16, r16
     e48:	02 17       	cp	r16, r18
     e4a:	08 f4       	brcc	.+2      	; 0xe4e <__ftoa_engine+0x142>
     e4c:	20 2f       	mov	r18, r16
     e4e:	23 95       	inc	r18
     e50:	02 2f       	mov	r16, r18
     e52:	7a 33       	cpi	r23, 0x3A	; 58
     e54:	28 f0       	brcs	.+10     	; 0xe60 <__ftoa_engine+0x154>
     e56:	79 e3       	ldi	r23, 0x39	; 57
     e58:	7d 93       	st	X+, r23
     e5a:	2a 95       	dec	r18
     e5c:	e9 f7       	brne	.-6      	; 0xe58 <__ftoa_engine+0x14c>
     e5e:	10 c0       	rjmp	.+32     	; 0xe80 <__ftoa_engine+0x174>
     e60:	7d 93       	st	X+, r23
     e62:	2a 95       	dec	r18
     e64:	89 f6       	brne	.-94     	; 0xe08 <__ftoa_engine+0xfc>
     e66:	06 94       	lsr	r0
     e68:	97 95       	ror	r25
     e6a:	67 95       	ror	r22
     e6c:	37 95       	ror	r19
     e6e:	17 95       	ror	r17
     e70:	17 94       	ror	r1
     e72:	e1 18       	sub	r14, r1
     e74:	f1 0a       	sbc	r15, r17
     e76:	43 0b       	sbc	r20, r19
     e78:	56 0b       	sbc	r21, r22
     e7a:	c9 0b       	sbc	r28, r25
     e7c:	d0 09       	sbc	r29, r0
     e7e:	98 f0       	brcs	.+38     	; 0xea6 <__ftoa_engine+0x19a>
     e80:	23 95       	inc	r18
     e82:	7e 91       	ld	r23, -X
     e84:	73 95       	inc	r23
     e86:	7a 33       	cpi	r23, 0x3A	; 58
     e88:	08 f0       	brcs	.+2      	; 0xe8c <__ftoa_engine+0x180>
     e8a:	70 e3       	ldi	r23, 0x30	; 48
     e8c:	7c 93       	st	X, r23
     e8e:	20 13       	cpse	r18, r16
     e90:	b8 f7       	brcc	.-18     	; 0xe80 <__ftoa_engine+0x174>
     e92:	7e 91       	ld	r23, -X
     e94:	70 61       	ori	r23, 0x10	; 16
     e96:	7d 93       	st	X+, r23
     e98:	30 f0       	brcs	.+12     	; 0xea6 <__ftoa_engine+0x19a>
     e9a:	83 95       	inc	r24
     e9c:	71 e3       	ldi	r23, 0x31	; 49
     e9e:	7d 93       	st	X+, r23
     ea0:	70 e3       	ldi	r23, 0x30	; 48
     ea2:	2a 95       	dec	r18
     ea4:	e1 f7       	brne	.-8      	; 0xe9e <__ftoa_engine+0x192>
     ea6:	11 24       	eor	r1, r1
     ea8:	ef 90       	pop	r14
     eaa:	ff 90       	pop	r15
     eac:	0f 91       	pop	r16
     eae:	1f 91       	pop	r17
     eb0:	cf 91       	pop	r28
     eb2:	df 91       	pop	r29
     eb4:	99 27       	eor	r25, r25
     eb6:	87 fd       	sbrc	r24, 7
     eb8:	90 95       	com	r25
     eba:	08 95       	ret

00000ebc <strnlen_P>:
     ebc:	fc 01       	movw	r30, r24
     ebe:	05 90       	lpm	r0, Z+
     ec0:	61 50       	subi	r22, 0x01	; 1
     ec2:	70 40       	sbci	r23, 0x00	; 0
     ec4:	01 10       	cpse	r0, r1
     ec6:	d8 f7       	brcc	.-10     	; 0xebe <strnlen_P+0x2>
     ec8:	80 95       	com	r24
     eca:	90 95       	com	r25
     ecc:	8e 0f       	add	r24, r30
     ece:	9f 1f       	adc	r25, r31
     ed0:	08 95       	ret

00000ed2 <strnlen>:
     ed2:	fc 01       	movw	r30, r24
     ed4:	61 50       	subi	r22, 0x01	; 1
     ed6:	70 40       	sbci	r23, 0x00	; 0
     ed8:	01 90       	ld	r0, Z+
     eda:	01 10       	cpse	r0, r1
     edc:	d8 f7       	brcc	.-10     	; 0xed4 <strnlen+0x2>
     ede:	80 95       	com	r24
     ee0:	90 95       	com	r25
     ee2:	8e 0f       	add	r24, r30
     ee4:	9f 1f       	adc	r25, r31
     ee6:	08 95       	ret

00000ee8 <fputc>:
     ee8:	0f 93       	push	r16
     eea:	1f 93       	push	r17
     eec:	cf 93       	push	r28
     eee:	df 93       	push	r29
     ef0:	fb 01       	movw	r30, r22
     ef2:	23 81       	ldd	r18, Z+3	; 0x03
     ef4:	21 fd       	sbrc	r18, 1
     ef6:	03 c0       	rjmp	.+6      	; 0xefe <fputc+0x16>
     ef8:	8f ef       	ldi	r24, 0xFF	; 255
     efa:	9f ef       	ldi	r25, 0xFF	; 255
     efc:	2c c0       	rjmp	.+88     	; 0xf56 <fputc+0x6e>
     efe:	22 ff       	sbrs	r18, 2
     f00:	16 c0       	rjmp	.+44     	; 0xf2e <fputc+0x46>
     f02:	46 81       	ldd	r20, Z+6	; 0x06
     f04:	57 81       	ldd	r21, Z+7	; 0x07
     f06:	24 81       	ldd	r18, Z+4	; 0x04
     f08:	35 81       	ldd	r19, Z+5	; 0x05
     f0a:	42 17       	cp	r20, r18
     f0c:	53 07       	cpc	r21, r19
     f0e:	44 f4       	brge	.+16     	; 0xf20 <fputc+0x38>
     f10:	a0 81       	ld	r26, Z
     f12:	b1 81       	ldd	r27, Z+1	; 0x01
     f14:	9d 01       	movw	r18, r26
     f16:	2f 5f       	subi	r18, 0xFF	; 255
     f18:	3f 4f       	sbci	r19, 0xFF	; 255
     f1a:	20 83       	st	Z, r18
     f1c:	31 83       	std	Z+1, r19	; 0x01
     f1e:	8c 93       	st	X, r24
     f20:	26 81       	ldd	r18, Z+6	; 0x06
     f22:	37 81       	ldd	r19, Z+7	; 0x07
     f24:	2f 5f       	subi	r18, 0xFF	; 255
     f26:	3f 4f       	sbci	r19, 0xFF	; 255
     f28:	26 83       	std	Z+6, r18	; 0x06
     f2a:	37 83       	std	Z+7, r19	; 0x07
     f2c:	14 c0       	rjmp	.+40     	; 0xf56 <fputc+0x6e>
     f2e:	8b 01       	movw	r16, r22
     f30:	ec 01       	movw	r28, r24
     f32:	fb 01       	movw	r30, r22
     f34:	00 84       	ldd	r0, Z+8	; 0x08
     f36:	f1 85       	ldd	r31, Z+9	; 0x09
     f38:	e0 2d       	mov	r30, r0
     f3a:	09 95       	icall
     f3c:	89 2b       	or	r24, r25
     f3e:	e1 f6       	brne	.-72     	; 0xef8 <fputc+0x10>
     f40:	d8 01       	movw	r26, r16
     f42:	16 96       	adiw	r26, 0x06	; 6
     f44:	8d 91       	ld	r24, X+
     f46:	9c 91       	ld	r25, X
     f48:	17 97       	sbiw	r26, 0x07	; 7
     f4a:	01 96       	adiw	r24, 0x01	; 1
     f4c:	16 96       	adiw	r26, 0x06	; 6
     f4e:	8d 93       	st	X+, r24
     f50:	9c 93       	st	X, r25
     f52:	17 97       	sbiw	r26, 0x07	; 7
     f54:	ce 01       	movw	r24, r28
     f56:	df 91       	pop	r29
     f58:	cf 91       	pop	r28
     f5a:	1f 91       	pop	r17
     f5c:	0f 91       	pop	r16
     f5e:	08 95       	ret

00000f60 <__ultoa_invert>:
     f60:	fa 01       	movw	r30, r20
     f62:	aa 27       	eor	r26, r26
     f64:	28 30       	cpi	r18, 0x08	; 8
     f66:	51 f1       	breq	.+84     	; 0xfbc <__ultoa_invert+0x5c>
     f68:	20 31       	cpi	r18, 0x10	; 16
     f6a:	81 f1       	breq	.+96     	; 0xfcc <__ultoa_invert+0x6c>
     f6c:	e8 94       	clt
     f6e:	6f 93       	push	r22
     f70:	6e 7f       	andi	r22, 0xFE	; 254
     f72:	6e 5f       	subi	r22, 0xFE	; 254
     f74:	7f 4f       	sbci	r23, 0xFF	; 255
     f76:	8f 4f       	sbci	r24, 0xFF	; 255
     f78:	9f 4f       	sbci	r25, 0xFF	; 255
     f7a:	af 4f       	sbci	r26, 0xFF	; 255
     f7c:	b1 e0       	ldi	r27, 0x01	; 1
     f7e:	3e d0       	rcall	.+124    	; 0xffc <__ultoa_invert+0x9c>
     f80:	b4 e0       	ldi	r27, 0x04	; 4
     f82:	3c d0       	rcall	.+120    	; 0xffc <__ultoa_invert+0x9c>
     f84:	67 0f       	add	r22, r23
     f86:	78 1f       	adc	r23, r24
     f88:	89 1f       	adc	r24, r25
     f8a:	9a 1f       	adc	r25, r26
     f8c:	a1 1d       	adc	r26, r1
     f8e:	68 0f       	add	r22, r24
     f90:	79 1f       	adc	r23, r25
     f92:	8a 1f       	adc	r24, r26
     f94:	91 1d       	adc	r25, r1
     f96:	a1 1d       	adc	r26, r1
     f98:	6a 0f       	add	r22, r26
     f9a:	71 1d       	adc	r23, r1
     f9c:	81 1d       	adc	r24, r1
     f9e:	91 1d       	adc	r25, r1
     fa0:	a1 1d       	adc	r26, r1
     fa2:	20 d0       	rcall	.+64     	; 0xfe4 <__ultoa_invert+0x84>
     fa4:	09 f4       	brne	.+2      	; 0xfa8 <__ultoa_invert+0x48>
     fa6:	68 94       	set
     fa8:	3f 91       	pop	r19
     faa:	2a e0       	ldi	r18, 0x0A	; 10
     fac:	26 9f       	mul	r18, r22
     fae:	11 24       	eor	r1, r1
     fb0:	30 19       	sub	r19, r0
     fb2:	30 5d       	subi	r19, 0xD0	; 208
     fb4:	31 93       	st	Z+, r19
     fb6:	de f6       	brtc	.-74     	; 0xf6e <__ultoa_invert+0xe>
     fb8:	cf 01       	movw	r24, r30
     fba:	08 95       	ret
     fbc:	46 2f       	mov	r20, r22
     fbe:	47 70       	andi	r20, 0x07	; 7
     fc0:	40 5d       	subi	r20, 0xD0	; 208
     fc2:	41 93       	st	Z+, r20
     fc4:	b3 e0       	ldi	r27, 0x03	; 3
     fc6:	0f d0       	rcall	.+30     	; 0xfe6 <__ultoa_invert+0x86>
     fc8:	c9 f7       	brne	.-14     	; 0xfbc <__ultoa_invert+0x5c>
     fca:	f6 cf       	rjmp	.-20     	; 0xfb8 <__ultoa_invert+0x58>
     fcc:	46 2f       	mov	r20, r22
     fce:	4f 70       	andi	r20, 0x0F	; 15
     fd0:	40 5d       	subi	r20, 0xD0	; 208
     fd2:	4a 33       	cpi	r20, 0x3A	; 58
     fd4:	18 f0       	brcs	.+6      	; 0xfdc <__ultoa_invert+0x7c>
     fd6:	49 5d       	subi	r20, 0xD9	; 217
     fd8:	31 fd       	sbrc	r19, 1
     fda:	40 52       	subi	r20, 0x20	; 32
     fdc:	41 93       	st	Z+, r20
     fde:	02 d0       	rcall	.+4      	; 0xfe4 <__ultoa_invert+0x84>
     fe0:	a9 f7       	brne	.-22     	; 0xfcc <__ultoa_invert+0x6c>
     fe2:	ea cf       	rjmp	.-44     	; 0xfb8 <__ultoa_invert+0x58>
     fe4:	b4 e0       	ldi	r27, 0x04	; 4
     fe6:	a6 95       	lsr	r26
     fe8:	97 95       	ror	r25
     fea:	87 95       	ror	r24
     fec:	77 95       	ror	r23
     fee:	67 95       	ror	r22
     ff0:	ba 95       	dec	r27
     ff2:	c9 f7       	brne	.-14     	; 0xfe6 <__ultoa_invert+0x86>
     ff4:	00 97       	sbiw	r24, 0x00	; 0
     ff6:	61 05       	cpc	r22, r1
     ff8:	71 05       	cpc	r23, r1
     ffa:	08 95       	ret
     ffc:	9b 01       	movw	r18, r22
     ffe:	ac 01       	movw	r20, r24
    1000:	0a 2e       	mov	r0, r26
    1002:	06 94       	lsr	r0
    1004:	57 95       	ror	r21
    1006:	47 95       	ror	r20
    1008:	37 95       	ror	r19
    100a:	27 95       	ror	r18
    100c:	ba 95       	dec	r27
    100e:	c9 f7       	brne	.-14     	; 0x1002 <__ultoa_invert+0xa2>
    1010:	62 0f       	add	r22, r18
    1012:	73 1f       	adc	r23, r19
    1014:	84 1f       	adc	r24, r20
    1016:	95 1f       	adc	r25, r21
    1018:	a0 1d       	adc	r26, r0
    101a:	08 95       	ret

0000101c <ccp_write_io>:
    101c:	dc 01       	movw	r26, r24
    101e:	28 ed       	ldi	r18, 0xD8	; 216
    1020:	20 93 34 00 	sts	0x0034, r18	; 0x800034 <crc6_table+0x7f7008>
    1024:	6c 93       	st	X, r22
    1026:	08 95       	ret

00001028 <_exit>:
    1028:	f8 94       	cli

0000102a <__stop_program>:
    102a:	ff cf       	rjmp	.-2      	; 0x102a <__stop_program>
